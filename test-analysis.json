{
  "timestamp": "2025-07-29T12:10:45.114Z",
  "statistics": {
    "totalTestFiles": 120,
    "duplicateUtilities": 75,
    "duplicateTests": 128,
    "structureIssues": 1
  },
  "testPatterns": {
    "byNaming": {
      "test": 111,
      "spec": 0,
      "testsDir": 9
    },
    "byLocation": {
      "colocated": 0,
      "testsDirectory": 120,
      "separate": 0
    },
    "byFramework": {
      "jest": 116,
      "react_testing_library": 33,
      "unknown": 5
    }
  },
  "testUtilities": [
    {
      "name": "mockCreateClient",
      "occurrences": [
        {
          "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
          "name": "mockCreateClient"
        },
        {
          "file": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
          "name": "mockCreateClient"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockCreateClient"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockCreateClient"
        },
        {
          "file": "src\\__tests__\\security\\rpc-security.test.ts",
          "name": "mockCreateClient"
        }
      ],
      "count": 5
    },
    {
      "name": "mockWindowClose",
      "occurrences": [
        {
          "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
          "name": "mockWindowClose"
        },
        {
          "file": "src\\lib\\utils\\__tests__\\window-close.test.ts",
          "name": "mockWindowClose"
        }
      ],
      "count": 2
    },
    {
      "name": "mockUser",
      "occurrences": [
        {
          "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\integration\\data-integrity-comprehensive.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\middleware.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\middleware.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\middleware.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\middleware.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\middleware.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockUser"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "name": "mockUser"
        }
      ],
      "count": 62
    },
    {
      "name": "mockUseSupabaseClient",
      "occurrences": [
        {
          "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
          "name": "mockUseSupabaseClient"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
          "name": "mockUseSupabaseClient"
        }
      ],
      "count": 2
    },
    {
      "name": "mockSupabaseClient",
      "occurrences": [
        {
          "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\contexts\\__tests__\\SupabaseProvider.test.tsx",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\lib\\supabase\\__tests__\\client.test.ts",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\__tests__\\integration\\data-integrity-comprehensive.test.ts",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
          "name": "mockSupabaseClient"
        },
        {
          "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
          "name": "mockSupabaseClient"
        }
      ],
      "count": 15
    },
    {
      "name": "mockUserProfile",
      "occurrences": [
        {
          "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
          "name": "mockUserProfile"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
          "name": "mockUserProfile"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
          "name": "mockUserProfile"
        },
        {
          "file": "src\\hooks\\__tests__\\useNavigationController.test.ts",
          "name": "mockUserProfile"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
          "name": "mockUserProfile"
        }
      ],
      "count": 5
    },
    {
      "name": "TestComponent",
      "occurrences": [
        {
          "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\contexts\\__tests__\\SupabaseProvider.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
          "name": "TestComponent"
        },
        {
          "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
          "name": "TestComponent"
        }
      ],
      "count": 14
    },
    {
      "name": "mockGetClientManager",
      "occurrences": [
        {
          "file": "src\\contexts\\__tests__\\SupabaseProvider.test.tsx",
          "name": "mockGetClientManager"
        },
        {
          "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
          "name": "mockGetClientManager"
        },
        {
          "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
          "name": "mockGetClientManager"
        },
        {
          "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
          "name": "mockGetClientManager"
        }
      ],
      "count": 4
    },
    {
      "name": "mockUseAuth",
      "occurrences": [
        {
          "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm.test.tsx",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\hooks\\__tests__\\useNavigationController.test.ts",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockUseAuth"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockUseAuth"
        }
      ],
      "count": 14
    },
    {
      "name": "mockUseToast",
      "occurrences": [
        {
          "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
          "name": "mockUseToast"
        },
        {
          "file": "src\\hooks\\__tests__\\useNavigationController.test.ts",
          "name": "mockUseToast"
        }
      ],
      "count": 2
    },
    {
      "name": "mockRequestOTP",
      "occurrences": [
        {
          "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockRequestOTP"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockRequestOTP"
        }
      ],
      "count": 32
    },
    {
      "name": "mockVerifyOTP",
      "occurrences": [
        {
          "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockVerifyOTP"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockVerifyOTP"
        }
      ],
      "count": 23
    },
    {
      "name": "mockToast",
      "occurrences": [
        {
          "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
          "name": "mockToast"
        },
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
          "name": "mockToast"
        },
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm.test.tsx",
          "name": "mockToast"
        },
        {
          "file": "src\\hooks\\__tests__\\useNavigationController.test.ts",
          "name": "mockToast"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
          "name": "mockToast"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockToast"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockToast"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockToast"
        }
      ],
      "count": 8
    },
    {
      "name": "mockRouter",
      "occurrences": [
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
          "name": "mockRouter"
        },
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm.test.tsx",
          "name": "mockRouter"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
          "name": "mockRouter"
        }
      ],
      "count": 3
    },
    {
      "name": "mockReload",
      "occurrences": [
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm.test.tsx",
          "name": "mockReload"
        },
        {
          "file": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
          "name": "mockReload"
        }
      ],
      "count": 2
    },
    {
      "name": "mockSupabaseAuth",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
          "name": "mockSupabaseAuth"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "name": "mockSupabaseAuth"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockSupabaseAuth"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockSupabaseAuth"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockSupabaseAuth"
        },
        {
          "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
          "name": "mockSupabaseAuth"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockSupabaseAuth"
        }
      ],
      "count": 7
    },
    {
      "name": "mockSupabase",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
          "name": "mockSupabase"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "name": "mockSupabase"
        },
        {
          "file": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
          "name": "mockSupabase"
        },
        {
          "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
          "name": "mockSupabase"
        },
        {
          "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
          "name": "mockSupabase"
        }
      ],
      "count": 5
    },
    {
      "name": "mockGetNetworkStatus",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
          "name": "mockGetNetworkStatus"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "name": "mockGetNetworkStatus"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
          "name": "mockGetNetworkStatus"
        },
        {
          "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
          "name": "mockGetNetworkStatus"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockGetNetworkStatus"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockGetNetworkStatus"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockGetNetworkStatus"
        },
        {
          "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
          "name": "mockGetNetworkStatus"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockGetNetworkStatus"
        }
      ],
      "count": 9
    },
    {
      "name": "mockIsNetworkError",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
          "name": "mockIsNetworkError"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "name": "mockIsNetworkError"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
          "name": "mockIsNetworkError"
        },
        {
          "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
          "name": "mockIsNetworkError"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockIsNetworkError"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockIsNetworkError"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "name": "mockIsNetworkError"
        },
        {
          "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
          "name": "mockIsNetworkError"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockIsNetworkError"
        }
      ],
      "count": 9
    },
    {
      "name": "mockSession",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "name": "mockSession"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockSession"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockSession"
        }
      ],
      "count": 30
    },
    {
      "name": "mockData",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
          "name": "mockData"
        },
        {
          "file": "src\\__tests__\\api\\pagination-support.test.ts",
          "name": "mockData"
        },
        {
          "file": "src\\__tests__\\api\\pagination-support.test.ts",
          "name": "mockData"
        },
        {
          "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
          "name": "mockData"
        },
        {
          "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
          "name": "mockData"
        },
        {
          "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
          "name": "mockData"
        },
        {
          "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
          "name": "mockData"
        }
      ],
      "count": 7
    },
    {
      "name": "mockPush",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockPush"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "mockPush"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
          "name": "mockPush"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockPush"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockPush"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockPush"
        }
      ],
      "count": 6
    },
    {
      "name": "mockReplace",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockReplace"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "mockReplace"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
          "name": "mockReplace"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockReplace"
        },
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockReplace"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockReplace"
        }
      ],
      "count": 6
    },
    {
      "name": "mockLocalStorage",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockLocalStorage"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "mockLocalStorage"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
          "name": "mockLocalStorage"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockLocalStorage"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "name": "mockLocalStorage"
        },
        {
          "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
          "name": "mockLocalStorage"
        }
      ],
      "count": 6
    },
    {
      "name": "mockAddEventListener",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockAddEventListener"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "mockAddEventListener"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockAddEventListener"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "name": "mockAddEventListener"
        }
      ],
      "count": 4
    },
    {
      "name": "mockRemoveEventListener",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "mockRemoveEventListener"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "mockRemoveEventListener"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "mockRemoveEventListener"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "name": "mockRemoveEventListener"
        }
      ],
      "count": 4
    },
    {
      "name": "TestWrapper",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "name": "TestWrapper"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "TestWrapper"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "name": "TestWrapper"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "name": "TestWrapper"
        },
        {
          "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
          "name": "TestWrapper"
        },
        {
          "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
          "name": "TestWrapper"
        }
      ],
      "count": 6
    },
    {
      "name": "MockSupabaseProvider",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "name": "MockSupabaseProvider"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "name": "MockSupabaseProvider"
        }
      ],
      "count": 2
    },
    {
      "name": "CountingTestComponent",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "name": "CountingTestComponent"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "name": "CountingTestComponent"
        }
      ],
      "count": 2
    },
    {
      "name": "mockLocation",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
          "name": "mockLocation"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
          "name": "mockLocation"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
          "name": "mockLocation"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
          "name": "mockLocation"
        },
        {
          "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
          "name": "mockLocation"
        },
        {
          "file": "src\\__tests__\\auth\\auth-integration.test.ts",
          "name": "mockLocation"
        },
        {
          "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
          "name": "mockLocation"
        },
        {
          "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
          "name": "mockLocation"
        },
        {
          "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
          "name": "mockLocation"
        }
      ],
      "count": 9
    },
    {
      "name": "mockSecureAccess",
      "occurrences": [
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockSecureAccess"
        }
      ],
      "count": 14
    },
    {
      "name": "mockResult",
      "occurrences": [
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockResult"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockResult"
        }
      ],
      "count": 2
    },
    {
      "name": "mockLogger",
      "occurrences": [
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockLogger"
        },
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "name": "mockLogger"
        },
        {
          "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
          "name": "mockLogger"
        }
      ],
      "count": 3
    },
    {
      "name": "mockConsoleLog",
      "occurrences": [
        {
          "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
          "name": "mockConsoleLog"
        },
        {
          "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
          "name": "mockConsoleLog"
        },
        {
          "file": "src\\__tests__\\security\\enhanced-logging.test.ts",
          "name": "mockConsoleLog"
        }
      ],
      "count": 3
    },
    {
      "name": "mockConsoleWarn",
      "occurrences": [
        {
          "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
          "name": "mockConsoleWarn"
        },
        {
          "file": "src\\__tests__\\security\\enhanced-logging.test.ts",
          "name": "mockConsoleWarn"
        }
      ],
      "count": 2
    },
    {
      "name": "mockConsoleError",
      "occurrences": [
        {
          "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
          "name": "mockConsoleError"
        },
        {
          "file": "src\\__tests__\\security\\enhanced-logging.test.ts",
          "name": "mockConsoleError"
        }
      ],
      "count": 2
    },
    {
      "name": "mockValidationResult",
      "occurrences": [
        {
          "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
          "name": "mockValidationResult"
        },
        {
          "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
          "name": "mockValidationResult"
        },
        {
          "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
          "name": "mockValidationResult"
        },
        {
          "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
          "name": "mockValidationResult"
        },
        {
          "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
          "name": "mockValidationResult"
        },
        {
          "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
          "name": "mockValidationResult"
        },
        {
          "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
          "name": "mockValidationResult"
        },
        {
          "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
          "name": "mockValidationResult"
        }
      ],
      "count": 8
    },
    {
      "name": "mockCreateBrowserClient",
      "occurrences": [
        {
          "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
          "name": "mockCreateBrowserClient"
        },
        {
          "file": "src\\lib\\supabase\\__tests__\\client.test.ts",
          "name": "mockCreateBrowserClient"
        }
      ],
      "count": 2
    },
    {
      "name": "mockGetPublicEnvVar",
      "occurrences": [
        {
          "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
          "name": "mockGetPublicEnvVar"
        },
        {
          "file": "src\\lib\\supabase\\__tests__\\client.test.ts",
          "name": "mockGetPublicEnvVar"
        }
      ],
      "count": 2
    },
    {
      "name": "mockEnv",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\deployment-info.test.ts",
          "name": "mockEnv"
        },
        {
          "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
          "name": "mockEnv"
        },
        {
          "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
          "name": "mockEnv"
        },
        {
          "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
          "name": "mockEnv"
        },
        {
          "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
          "name": "mockEnv"
        },
        {
          "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
          "name": "mockEnv"
        },
        {
          "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
          "name": "mockEnv"
        },
        {
          "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
          "name": "mockEnv"
        },
        {
          "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
          "name": "mockEnv"
        }
      ],
      "count": 9
    },
    {
      "name": "mockPaginatedData",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
          "name": "mockPaginatedData"
        },
        {
          "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
          "name": "mockPaginatedData"
        },
        {
          "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
          "name": "mockPaginatedData"
        }
      ],
      "count": 3
    },
    {
      "name": "mockAnonymousData",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
          "name": "mockAnonymousData"
        },
        {
          "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
          "name": "mockAnonymousData"
        }
      ],
      "count": 2
    },
    {
      "name": "mockResponse",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
          "name": "mockResponse"
        },
        {
          "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
          "name": "mockResponse"
        },
        {
          "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
          "name": "mockResponse"
        },
        {
          "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
          "name": "mockResponse"
        },
        {
          "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
          "name": "mockResponse"
        },
        {
          "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
          "name": "mockResponse"
        },
        {
          "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
          "name": "mockResponse"
        },
        {
          "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
          "name": "mockResponse"
        },
        {
          "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
          "name": "mockResponse"
        },
        {
          "file": "src\\__tests__\\usePaginatedReservations.test.ts",
          "name": "mockResponse"
        },
        {
          "file": "src\\__tests__\\usePaginatedReservations.test.ts",
          "name": "mockResponse"
        },
        {
          "file": "src\\__tests__\\usePaginatedReservations.test.ts",
          "name": "mockResponse"
        }
      ],
      "count": 12
    },
    {
      "name": "mockHandler",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        },
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "name": "mockHandler"
        }
      ],
      "count": 15
    },
    {
      "name": "createMockLocalStorage",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
          "name": "createMockLocalStorage"
        },
        {
          "file": "src\\__tests__\\auth\\performance-validation.test.ts",
          "name": "createMockLocalStorage"
        }
      ],
      "count": 2
    },
    {
      "name": "pwaMock",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
          "name": "pwaMock"
        },
        {
          "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
          "name": "pwaMock"
        }
      ],
      "count": 2
    },
    {
      "name": "localStorageMock",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
          "name": "localStorageMock"
        },
        {
          "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
          "name": "localStorageMock"
        },
        {
          "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
          "name": "localStorageMock"
        },
        {
          "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
          "name": "localStorageMock"
        },
        {
          "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
          "name": "localStorageMock"
        },
        {
          "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
          "name": "localStorageMock"
        },
        {
          "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
          "name": "localStorageMock"
        },
        {
          "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
          "name": "localStorageMock"
        },
        {
          "file": "src\\__tests__\\auth\\migration-script.test.ts",
          "name": "localStorageMock"
        },
        {
          "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
          "name": "localStorageMock"
        },
        {
          "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
          "name": "localStorageMock"
        },
        {
          "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
          "name": "localStorageMock"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "name": "localStorageMock"
        }
      ],
      "count": 13
    },
    {
      "name": "mockCallback",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
          "name": "mockCallback"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "name": "mockCallback"
        }
      ],
      "count": 2
    },
    {
      "name": "mockReservations",
      "occurrences": [
        {
          "file": "src\\__tests__\\components\\InfiniteReservationList.test.tsx",
          "name": "mockReservations"
        },
        {
          "file": "src\\__tests__\\components\\InfiniteReservationList.test.tsx",
          "name": "mockReservations"
        }
      ],
      "count": 2
    },
    {
      "name": "mockFetchNextPage",
      "occurrences": [
        {
          "file": "src\\__tests__\\components\\InfiniteReservationList.test.tsx",
          "name": "mockFetchNextPage"
        },
        {
          "file": "src\\__tests__\\components\\InfiniteReservationList.test.tsx",
          "name": "mockFetchNextPage"
        }
      ],
      "count": 2
    },
    {
      "name": "mockSupabaseRpc",
      "occurrences": [
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockSupabaseRpc"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockSupabaseRpc"
        }
      ],
      "count": 2
    },
    {
      "name": "mockIsPWAEnvironment",
      "occurrences": [
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockIsPWAEnvironment"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockIsPWAEnvironment"
        }
      ],
      "count": 2
    },
    {
      "name": "mockGetPWACapabilities",
      "occurrences": [
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockGetPWACapabilities"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockGetPWACapabilities"
        }
      ],
      "count": 2
    },
    {
      "name": "mockCleanup",
      "occurrences": [
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "name": "mockCleanup"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "name": "mockCleanup"
        }
      ],
      "count": 2
    },
    {
      "name": "mockGitignore",
      "occurrences": [
        {
          "file": "src\\__tests__\\deployment\\platform-integration.test.ts",
          "name": "mockGitignore"
        },
        {
          "file": "src\\__tests__\\deployment\\platform-integration.test.ts",
          "name": "mockGitignore"
        }
      ],
      "count": 2
    },
    {
      "name": "unsubscribeMock",
      "occurrences": [
        {
          "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
          "name": "unsubscribeMock"
        },
        {
          "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
          "name": "unsubscribeMock"
        }
      ],
      "count": 2
    },
    {
      "name": "mockFetch",
      "occurrences": [
        {
          "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
          "name": "mockFetch"
        },
        {
          "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
          "name": "mockFetch"
        },
        {
          "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
          "name": "mockFetch"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockFetch"
        }
      ],
      "count": 4
    },
    {
      "name": "mockPage",
      "occurrences": [
        {
          "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
          "name": "mockPage"
        },
        {
          "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
          "name": "mockPage"
        }
      ],
      "count": 2
    },
    {
      "name": "mockPages",
      "occurrences": [
        {
          "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
          "name": "mockPages"
        },
        {
          "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
          "name": "mockPages"
        },
        {
          "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
          "name": "mockPages"
        }
      ],
      "count": 3
    },
    {
      "name": "mockQuery",
      "occurrences": [
        {
          "file": "src\\__tests__\\integration\\data-integrity-comprehensive.test.ts",
          "name": "mockQuery"
        },
        {
          "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
          "name": "mockQuery"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
          "name": "mockQuery"
        },
        {
          "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
          "name": "mockQuery"
        },
        {
          "file": "src\\__tests__\\setup\\test-infrastructure.setup.ts",
          "name": "mockQuery"
        }
      ],
      "count": 5
    },
    {
      "name": "mockPerformanceMonitor",
      "occurrences": [
        {
          "file": "src\\__tests__\\integration\\security-performance-monitoring.test.ts",
          "name": "mockPerformanceMonitor"
        },
        {
          "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
          "name": "mockPerformanceMonitor"
        }
      ],
      "count": 2
    },
    {
      "name": "mockAuthOperation",
      "occurrences": [
        {
          "file": "src\\__tests__\\integration\\security-performance-monitoring.test.ts",
          "name": "mockAuthOperation"
        },
        {
          "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
          "name": "mockAuthOperation"
        }
      ],
      "count": 2
    },
    {
      "name": "mockRpcFunction",
      "occurrences": [
        {
          "file": "src\\__tests__\\integration\\security-performance-monitoring.test.ts",
          "name": "mockRpcFunction"
        },
        {
          "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
          "name": "mockRpcFunction"
        },
        {
          "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
          "name": "mockRpcFunction"
        }
      ],
      "count": 3
    },
    {
      "name": "mockEnvironmentCheck",
      "occurrences": [
        {
          "file": "src\\__tests__\\integration\\security-performance-monitoring.test.ts",
          "name": "mockEnvironmentCheck"
        },
        {
          "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
          "name": "mockEnvironmentCheck"
        }
      ],
      "count": 2
    },
    {
      "name": "mockClient",
      "occurrences": [
        {
          "file": "src\\__tests__\\integration\\test-infrastructure-integration.test.ts",
          "name": "mockClient"
        },
        {
          "file": "src\\__tests__\\integration\\test-infrastructure-integration.test.ts",
          "name": "mockClient"
        }
      ],
      "count": 2
    },
    {
      "name": "mockCreateServerClient",
      "occurrences": [
        {
          "file": "src\\__tests__\\middleware.test.ts",
          "name": "mockCreateServerClient"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockCreateServerClient"
        }
      ],
      "count": 2
    },
    {
      "name": "mockCookies",
      "occurrences": [
        {
          "file": "src\\__tests__\\middleware.test.ts",
          "name": "mockCookies"
        },
        {
          "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
          "name": "mockCookies"
        }
      ],
      "count": 2
    },
    {
      "name": "mockRegister",
      "occurrences": [
        {
          "file": "src\\__tests__\\polyfills\\ClientPolyfillManager.test.tsx",
          "name": "mockRegister"
        },
        {
          "file": "src\\__tests__\\polyfills\\ClientPolyfillManager.test.tsx",
          "name": "mockRegister"
        }
      ],
      "count": 2
    },
    {
      "name": "mockServiceWorker",
      "occurrences": [
        {
          "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
          "name": "mockServiceWorker"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "name": "mockServiceWorker"
        }
      ],
      "count": 2
    },
    {
      "name": "mockElement",
      "occurrences": [
        {
          "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
          "name": "mockElement"
        },
        {
          "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
          "name": "mockElement"
        }
      ],
      "count": 2
    },
    {
      "name": "mockRegistration",
      "occurrences": [
        {
          "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
          "name": "mockRegistration"
        },
        {
          "file": "src\\__tests__\\security\\third-party-dependencies.test.ts",
          "name": "mockRegistration"
        }
      ],
      "count": 2
    },
    {
      "name": "mockRemoveListener",
      "occurrences": [
        {
          "file": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
          "name": "mockRemoveListener"
        },
        {
          "file": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
          "name": "mockRemoveListener"
        }
      ],
      "count": 2
    },
    {
      "name": "mockUsers",
      "occurrences": [
        {
          "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
          "name": "mockUsers"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
          "name": "mockUsers"
        }
      ],
      "count": 2
    },
    {
      "name": "mockGetServiceRoleKey",
      "occurrences": [
        {
          "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
          "name": "mockGetServiceRoleKey"
        },
        {
          "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
          "name": "mockGetServiceRoleKey"
        },
        {
          "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
          "name": "mockGetServiceRoleKey"
        },
        {
          "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
          "name": "mockGetServiceRoleKey"
        }
      ],
      "count": 4
    },
    {
      "name": "mockConfig",
      "occurrences": [
        {
          "file": "src\\__tests__\\security\\third-party-dependencies.test.ts",
          "name": "mockConfig"
        },
        {
          "file": "src\\__tests__\\security\\third-party-dependencies.test.ts",
          "name": "mockConfig"
        }
      ],
      "count": 2
    }
  ],
  "duplicateTests": [
    {
      "description": "Error Scenarios",
      "occurrences": [
        {
          "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
          "description": "Error Scenarios"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\migration-end-to-end.test.ts",
          "description": "Error Scenarios"
        },
        {
          "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
          "description": "Error Scenarios"
        }
      ],
      "count": 3
    },
    {
      "description": "Keyboard Navigation",
      "occurrences": [
        {
          "file": "src\\components\\ui\\__tests__\\otp-input.test.tsx",
          "description": "Keyboard Navigation"
        },
        {
          "file": "src\\__tests__\\accessibility\\otp-accessibility.test.ts",
          "description": "Keyboard Navigation"
        }
      ],
      "count": 2
    },
    {
      "description": "Focus Management",
      "occurrences": [
        {
          "file": "src\\components\\ui\\__tests__\\otp-input.test.tsx",
          "description": "Focus Management"
        },
        {
          "file": "src\\__tests__\\accessibility\\otp-accessibility.test.ts",
          "description": "Focus Management"
        }
      ],
      "count": 2
    },
    {
      "description": "Accessibility",
      "occurrences": [
        {
          "file": "src\\components\\ui\\__tests__\\otp-input.test.tsx",
          "description": "Accessibility"
        },
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
          "description": "Accessibility"
        }
      ],
      "count": 2
    },
    {
      "description": "Edge Cases",
      "occurrences": [
        {
          "file": "src\\components\\ui\\__tests__\\otp-input.test.tsx",
          "description": "Edge Cases"
        },
        {
          "file": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
          "description": "Edge Cases"
        },
        {
          "file": "src\\__tests__\\pagination.test.ts",
          "description": "Edge Cases"
        }
      ],
      "count": 3
    },
    {
      "description": "Provider initialization",
      "occurrences": [
        {
          "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
          "description": "Provider initialization"
        },
        {
          "file": "src\\contexts\\__tests__\\SupabaseProvider.test.tsx",
          "description": "Provider initialization"
        }
      ],
      "count": 2
    },
    {
      "description": "should categorize network errors correctly",
      "occurrences": [
        {
          "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
          "description": "should categorize network errors correctly"
        },
        {
          "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
          "description": "should categorize network errors correctly"
        },
        {
          "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
          "description": "should categorize network errors correctly"
        }
      ],
      "count": 3
    },
    {
      "description": "PWA Environment Detection",
      "occurrences": [
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
          "description": "PWA Environment Detection"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "description": "PWA Environment Detection"
        }
      ],
      "count": 2
    },
    {
      "description": "Error Handling",
      "occurrences": [
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
          "description": "Error Handling"
        },
        {
          "file": "src\\__tests__\\api\\pagination-support.test.ts",
          "description": "Error Handling"
        },
        {
          "file": "src\\__tests__\\auth\\migration-script.test.ts",
          "description": "Error Handling"
        },
        {
          "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
          "description": "Error Handling"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "description": "Error Handling"
        },
        {
          "file": "src\\__tests__\\enhanced-type-system.test.ts",
          "description": "Error Handling"
        },
        {
          "file": "src\\__tests__\\middleware.test.ts",
          "description": "Error Handling"
        },
        {
          "file": "src\\__tests__\\pagination.test.ts",
          "description": "Error Handling"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
          "description": "Error Handling"
        }
      ],
      "count": 9
    },
    {
      "description": "should render signup form with all required fields",
      "occurrences": [
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
          "description": "should render signup form with all required fields"
        },
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm.basic.test.tsx",
          "description": "should render signup form with all required fields"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle duplicate email error",
      "occurrences": [
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
          "description": "should handle duplicate email error"
        },
        {
          "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
          "description": "should handle duplicate email error"
        },
        {
          "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
          "description": "should handle duplicate email error"
        }
      ],
      "count": 3
    },
    {
      "description": "should validate required fields",
      "occurrences": [
        {
          "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
          "description": "should validate required fields"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "description": "should validate required fields"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle offline state correctly",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
          "description": "should handle offline state correctly"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
          "description": "should handle offline state correctly"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle missing session data",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
          "description": "should handle missing session data"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "description": "should handle missing session data"
        }
      ],
      "count": 2
    },
    {
      "description": "should provide appropriate offline messaging",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
          "description": "should provide appropriate offline messaging"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
          "description": "should provide appropriate offline messaging"
        }
      ],
      "count": 2
    },
    {
      "description": "Session Compatibility",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
          "description": "Session Compatibility"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
          "description": "Session Compatibility"
        }
      ],
      "count": 2
    },
    {
      "description": "Backward Compatibility",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
          "description": "Backward Compatibility"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\migration-integration.test.ts",
          "description": "Backward Compatibility"
        }
      ],
      "count": 2
    },
    {
      "description": "PWA Compatibility",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
          "description": "PWA Compatibility"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\migration-integration.test.ts",
          "description": "PWA Compatibility"
        }
      ],
      "count": 2
    },
    {
      "description": "should throw error when supabase is not available",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "description": "should throw error when supabase is not available"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "description": "should throw error when supabase is not available"
        }
      ],
      "count": 2
    },
    {
      "description": "should throw error when offline",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "description": "should throw error when offline"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "description": "should throw error when offline"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle user not found error",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "description": "should handle user not found error"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "description": "should handle user not found error"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
          "description": "should handle user not found error"
        }
      ],
      "count": 3
    },
    {
      "description": "should handle rate limit error",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "description": "should handle rate limit error"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "description": "should handle rate limit error"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
          "description": "should handle rate limit error"
        }
      ],
      "count": 3
    },
    {
      "description": "should handle invalid email error",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "description": "should handle invalid email error"
        },
        {
          "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
          "description": "should handle invalid email error"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle network errors",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "description": "should handle network errors"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
          "description": "should handle network errors"
        },
        {
          "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
          "description": "should handle network errors"
        },
        {
          "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
          "description": "should handle network errors"
        }
      ],
      "count": 4
    },
    {
      "description": "Basic functionality",
      "occurrences": [
        {
          "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
          "description": "Basic functionality"
        },
        {
          "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
          "description": "Basic functionality"
        }
      ],
      "count": 2
    },
    {
      "description": "should stop polling after max retries (3 attempts)",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "description": "should stop polling after max retries (3 attempts)"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "description": "should stop polling after max retries (3 attempts)"
        }
      ],
      "count": 2
    },
    {
      "description": "should not start polling on /dashboard page",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "description": "should not start polling on /dashboard page"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "description": "should not start polling on /dashboard page"
        }
      ],
      "count": 2
    },
    {
      "description": "should not start polling on /reservations page",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "description": "should not start polling on /reservations page"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "description": "should not start polling on /reservations page"
        }
      ],
      "count": 2
    },
    {
      "description": "should not trigger any polling when user is authenticated",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "description": "should not trigger any polling when user is authenticated"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "description": "should not trigger any polling when user is authenticated"
        }
      ],
      "count": 2
    },
    {
      "description": "should use correct exponential backoff intervals (2s, 4s, 8s)",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "description": "should use correct exponential backoff intervals (2s, 4s, 8s)"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "description": "should use correct exponential backoff intervals (2s, 4s, 8s)"
        }
      ],
      "count": 2
    },
    {
      "description": "should detect magic link authentication within 2 seconds via polling",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "description": "should detect magic link authentication within 2 seconds via polling"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "description": "should detect magic link authentication within 2 seconds via polling"
        }
      ],
      "count": 2
    },
    {
      "description": "should stop all polling immediately after successful authentication",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "description": "should stop all polling immediately after successful authentication"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "description": "should stop all polling immediately after successful authentication"
        }
      ],
      "count": 2
    },
    {
      "description": "should not create memory leaks with multiple mount/unmount cycles",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "description": "should not create memory leaks with multiple mount/unmount cycles"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "description": "should not create memory leaks with multiple mount/unmount cycles"
        }
      ],
      "count": 2
    },
    {
      "description": "should check session once when app regains focus on login page",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "description": "should check session once when app regains focus on login page"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "description": "should check session once when app regains focus on login page"
        }
      ],
      "count": 2
    },
    {
      "description": "should properly cleanup all resources on unmount",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
          "description": "should properly cleanup all resources on unmount"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "description": "should properly cleanup all resources on unmount"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
          "description": "should properly cleanup all resources on unmount"
        }
      ],
      "count": 3
    },
    {
      "description": "Complete Authentication Flow",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "description": "Complete Authentication Flow"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "description": "Complete Authentication Flow"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle cleanup errors gracefully",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
          "description": "should handle cleanup errors gracefully"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "description": "should handle cleanup errors gracefully"
        },
        {
          "file": "src\\lib\\utils\\__tests__\\window-close.test.ts",
          "description": "should handle cleanup errors gracefully"
        }
      ],
      "count": 3
    },
    {
      "description": "Error Recovery Scenarios",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
          "description": "Error Recovery Scenarios"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\e2e-scenarios.test.ts",
          "description": "Error Recovery Scenarios"
        }
      ],
      "count": 2
    },
    {
      "description": "Migration Compatibility",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
          "description": "Migration Compatibility"
        },
        {
          "file": "src\\__tests__\\auth\\auth-integration.test.ts",
          "description": "Migration Compatibility"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle invalid URLs gracefully",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
          "description": "should handle invalid URLs gracefully"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
          "description": "should handle invalid URLs gracefully"
        }
      ],
      "count": 2
    },
    {
      "description": "should detect missing required fields",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
          "description": "should detect missing required fields"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
          "description": "should detect missing required fields"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
          "description": "should detect missing required fields"
        }
      ],
      "count": 3
    },
    {
      "description": "should detect expired session",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
          "description": "should detect expired session"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
          "description": "should detect expired session"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle null session",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
          "description": "should handle null session"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
          "description": "should handle null session"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
          "description": "should handle null session"
        }
      ],
      "count": 3
    },
    {
      "description": "should work with existing session polling mechanism",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\migration-end-to-end.test.ts",
          "description": "should work with existing session polling mechanism"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\migration-integration.test.ts",
          "description": "should work with existing session polling mechanism"
        }
      ],
      "count": 2
    },
    {
      "description": "Error Handling Integration",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\migration-integration.test.ts",
          "description": "Error Handling Integration"
        },
        {
          "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
          "description": "Error Handling Integration"
        },
        {
          "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
          "description": "Error Handling Integration"
        },
        {
          "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
          "description": "Error Handling Integration"
        }
      ],
      "count": 4
    },
    {
      "description": "constructor",
      "occurrences": [
        {
          "file": "src\\lib\\auth\\__tests__\\SessionErrorHandler.test.ts",
          "description": "constructor"
        },
        {
          "file": "src\\lib\\auth\\__tests__\\SessionPollingManager.test.ts",
          "description": "constructor"
        }
      ],
      "count": 2
    },
    {
      "description": "Convenience Functions",
      "occurrences": [
        {
          "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
          "description": "Convenience Functions"
        },
        {
          "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
          "description": "Convenience Functions"
        },
        {
          "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
          "description": "Convenience Functions"
        },
        {
          "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
          "description": "Convenience Functions"
        }
      ],
      "count": 4
    },
    {
      "description": "validateEmailFormat",
      "occurrences": [
        {
          "file": "src\\lib\\email-validation\\__tests__\\email-validation-basic.test.ts",
          "description": "validateEmailFormat"
        },
        {
          "file": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
          "description": "validateEmailFormat"
        }
      ],
      "count": 2
    },
    {
      "description": "should validate correct email formats",
      "occurrences": [
        {
          "file": "src\\lib\\email-validation\\__tests__\\email-validation-basic.test.ts",
          "description": "should validate correct email formats"
        },
        {
          "file": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
          "description": "should validate correct email formats"
        }
      ],
      "count": 2
    },
    {
      "description": "should reject invalid email formats",
      "occurrences": [
        {
          "file": "src\\lib\\email-validation\\__tests__\\email-validation-basic.test.ts",
          "description": "should reject invalid email formats"
        },
        {
          "file": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
          "description": "should reject invalid email formats"
        }
      ],
      "count": 2
    },
    {
      "description": "Error Categorization",
      "occurrences": [
        {
          "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
          "description": "Error Categorization"
        },
        {
          "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
          "description": "Error Categorization"
        }
      ],
      "count": 2
    },
    {
      "description": "Singleton Pattern",
      "occurrences": [
        {
          "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
          "description": "Singleton Pattern"
        },
        {
          "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
          "description": "Singleton Pattern"
        },
        {
          "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
          "description": "Singleton Pattern"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "description": "Singleton Pattern"
        },
        {
          "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
          "description": "Singleton Pattern"
        }
      ],
      "count": 5
    },
    {
      "description": "should categorize environment errors correctly",
      "occurrences": [
        {
          "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
          "description": "should categorize environment errors correctly"
        },
        {
          "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
          "description": "should categorize environment errors correctly"
        }
      ],
      "count": 2
    },
    {
      "description": "getRedirectPath",
      "occurrences": [
        {
          "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
          "description": "getRedirectPath"
        },
        {
          "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
          "description": "getRedirectPath"
        }
      ],
      "count": 2
    },
    {
      "description": "should return the same instance",
      "occurrences": [
        {
          "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
          "description": "should return the same instance"
        },
        {
          "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
          "description": "should return the same instance"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "description": "should return the same instance"
        }
      ],
      "count": 3
    },
    {
      "description": "Route Configuration",
      "occurrences": [
        {
          "file": "src\\lib\\routes\\__tests__\\config.test.ts",
          "description": "Route Configuration"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\matcher.test.ts",
          "description": "Route Configuration"
        }
      ],
      "count": 2
    },
    {
      "description": "should return null for non-existent routes",
      "occurrences": [
        {
          "file": "src\\lib\\routes\\__tests__\\config.test.ts",
          "description": "should return null for non-existent routes"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\matcher.test.ts",
          "description": "should return null for non-existent routes"
        }
      ],
      "count": 2
    },
    {
      "description": "should return all public routes",
      "occurrences": [
        {
          "file": "src\\lib\\routes\\__tests__\\config.test.ts",
          "description": "should return all public routes"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\matcher.test.ts",
          "description": "should return all public routes"
        }
      ],
      "count": 2
    },
    {
      "description": "should return all semi-public routes",
      "occurrences": [
        {
          "file": "src\\lib\\routes\\__tests__\\config.test.ts",
          "description": "should return all semi-public routes"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\matcher.test.ts",
          "description": "should return all semi-public routes"
        }
      ],
      "count": 2
    },
    {
      "description": "should return all private routes",
      "occurrences": [
        {
          "file": "src\\lib\\routes\\__tests__\\config.test.ts",
          "description": "should return all private routes"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\matcher.test.ts",
          "description": "should return all private routes"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle reservation management workflow",
      "occurrences": [
        {
          "file": "src\\lib\\routes\\__tests__\\e2e-scenarios.test.ts",
          "description": "should handle reservation management workflow"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\integration.test.ts",
          "description": "should handle reservation management workflow"
        }
      ],
      "count": 2
    },
    {
      "description": "should get correct accessible routes list",
      "occurrences": [
        {
          "file": "src\\lib\\routes\\__tests__\\integration.test.ts",
          "description": "should get correct accessible routes list"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\integration.test.ts",
          "description": "should get correct accessible routes list"
        }
      ],
      "count": 2
    },
    {
      "description": "renders with default props",
      "occurrences": [
        {
          "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
          "description": "renders with default props"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
          "description": "renders with default props"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
          "description": "renders with default props"
        }
      ],
      "count": 3
    },
    {
      "description": "handles home button click",
      "occurrences": [
        {
          "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
          "description": "handles home button click"
        },
        {
          "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
          "description": "handles home button click"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle validation errors gracefully",
      "occurrences": [
        {
          "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
          "description": "should handle validation errors gracefully"
        },
        {
          "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
          "description": "should handle validation errors gracefully"
        }
      ],
      "count": 2
    },
    {
      "description": "Client Reinitialization",
      "occurrences": [
        {
          "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
          "description": "Client Reinitialization"
        },
        {
          "file": "src\\lib\\supabase\\__tests__\\client.test.ts",
          "description": "Client Reinitialization"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle network errors with retry capability",
      "occurrences": [
        {
          "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
          "description": "should handle network errors with retry capability"
        },
        {
          "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
          "description": "should handle network errors with retry capability"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle configuration errors",
      "occurrences": [
        {
          "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
          "description": "should handle configuration errors"
        },
        {
          "file": "src\\lib\\supabase\\__tests__\\client.test.ts",
          "description": "should handle configuration errors"
        }
      ],
      "count": 2
    },
    {
      "description": "should use window.location.pathname when no pathname provided",
      "occurrences": [
        {
          "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
          "description": "should use window.location.pathname when no pathname provided"
        },
        {
          "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
          "description": "should use window.location.pathname when no pathname provided"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle SSR environment",
      "occurrences": [
        {
          "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
          "description": "should handle SSR environment"
        },
        {
          "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
          "description": "should handle SSR environment"
        },
        {
          "file": "src\\lib\\utils\\__tests__\\error-messages.test.ts",
          "description": "should handle SSR environment"
        }
      ],
      "count": 3
    },
    {
      "description": "should detect standalone PWA mode",
      "occurrences": [
        {
          "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
          "description": "should detect standalone PWA mode"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "description": "should detect standalone PWA mode"
        }
      ],
      "count": 2
    },
    {
      "description": "should detect iOS standalone mode",
      "occurrences": [
        {
          "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
          "description": "should detect iOS standalone mode"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "description": "should detect iOS standalone mode"
        }
      ],
      "count": 2
    },
    {
      "description": "should detect minimal-ui PWA mode",
      "occurrences": [
        {
          "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
          "description": "should detect minimal-ui PWA mode"
        },
        {
          "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
          "description": "should detect minimal-ui PWA mode"
        }
      ],
      "count": 2
    },
    {
      "description": "should reject invalid email format",
      "occurrences": [
        {
          "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
          "description": "should reject invalid email format"
        },
        {
          "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
          "description": "should reject invalid email format"
        },
        {
          "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
          "description": "should reject invalid email format"
        },
        {
          "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
          "description": "should reject invalid email format"
        },
        {
          "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
          "description": "should reject invalid email format"
        },
        {
          "file": "src\\__tests__\\middleware\\validation.test.ts",
          "description": "should reject invalid email format"
        },
        {
          "file": "src\\__tests__\\middleware\\validation.test.ts",
          "description": "should reject invalid email format"
        }
      ],
      "count": 7
    },
    {
      "description": "signupSchema",
      "occurrences": [
        {
          "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
          "description": "signupSchema"
        },
        {
          "file": "src\\__tests__\\middleware\\validation.test.ts",
          "description": "signupSchema"
        }
      ],
      "count": 2
    },
    {
      "description": "Pagination Metadata Calculation",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
          "description": "Pagination Metadata Calculation"
        },
        {
          "file": "src\\__tests__\\api\\pagination-support.test.ts",
          "description": "Pagination Metadata Calculation"
        }
      ],
      "count": 2
    },
    {
      "description": "should validate limit parameter bounds",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
          "description": "should validate limit parameter bounds"
        },
        {
          "file": "src\\__tests__\\api\\pagination-support.test.ts",
          "description": "should validate limit parameter bounds"
        }
      ],
      "count": 2
    },
    {
      "description": "should validate offset parameter bounds",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
          "description": "should validate offset parameter bounds"
        },
        {
          "file": "src\\__tests__\\api\\pagination-support.test.ts",
          "description": "should validate offset parameter bounds"
        }
      ],
      "count": 2
    },
    {
      "description": "should calculate pagination metadata correctly",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
          "description": "should calculate pagination metadata correctly"
        },
        {
          "file": "src\\__tests__\\api\\pagination-support.test.ts",
          "description": "should calculate pagination metadata correctly"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle empty results",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
          "description": "should handle empty results"
        },
        {
          "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
          "description": "should handle empty results"
        },
        {
          "file": "src\\__tests__\\pagination.test.ts",
          "description": "should handle empty results"
        }
      ],
      "count": 3
    },
    {
      "description": "Parameter Validation",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\pagination-support.test.ts",
          "description": "Parameter Validation"
        },
        {
          "file": "src\\__tests__\\pagination.test.ts",
          "description": "Parameter Validation"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle special characters in dates",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\pagination-support.test.ts",
          "description": "should handle special characters in dates"
        },
        {
          "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
          "description": "should handle special characters in dates"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle last page correctly",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\pagination-support.test.ts",
          "description": "should handle last page correctly"
        },
        {
          "file": "src\\__tests__\\pagination.test.ts",
          "description": "should handle last page correctly"
        }
      ],
      "count": 2
    },
    {
      "description": "should validate reservation creation data",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "description": "should validate reservation creation data"
        },
        {
          "file": "src\\__tests__\\middleware\\validation.test.ts",
          "description": "should validate reservation creation data"
        }
      ],
      "count": 2
    },
    {
      "description": "should reject reservation with end time before start time",
      "occurrences": [
        {
          "file": "src\\__tests__\\api\\standardized-validation.test.ts",
          "description": "should reject reservation with end time before start time"
        },
        {
          "file": "src\\__tests__\\middleware\\validation.test.ts",
          "description": "should reject reservation with end time before start time"
        }
      ],
      "count": 2
    },
    {
      "description": "Alert System",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
          "description": "Alert System"
        },
        {
          "file": "src\\__tests__\\monitoring\\environment-monitor.test.ts",
          "description": "Alert System"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle callback errors gracefully",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
          "description": "should handle callback errors gracefully"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "description": "should handle callback errors gracefully"
        }
      ],
      "count": 2
    },
    {
      "description": "should cleanup resources on destroy",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
          "description": "should cleanup resources on destroy"
        },
        {
          "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
          "description": "should cleanup resources on destroy"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "description": "should cleanup resources on destroy"
        }
      ],
      "count": 3
    },
    {
      "description": "Cross-Tab Communication",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\auth-integration.test.ts",
          "description": "Cross-Tab Communication"
        },
        {
          "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
          "description": "Cross-Tab Communication"
        }
      ],
      "count": 2
    },
    {
      "description": "Logging",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\migration-script.test.ts",
          "description": "Logging"
        },
        {
          "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
          "description": "Logging"
        }
      ],
      "count": 2
    },
    {
      "description": "Storage Management",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
          "description": "Storage Management"
        },
        {
          "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
          "description": "Storage Management"
        }
      ],
      "count": 2
    },
    {
      "description": "Cleanup",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
          "description": "Cleanup"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "description": "Cleanup"
        }
      ],
      "count": 2
    },
    {
      "description": "should set and get auth state",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
          "description": "should set and get auth state"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "description": "should set and get auth state"
        }
      ],
      "count": 2
    },
    {
      "description": "should clear auth state",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
          "description": "should clear auth state"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "description": "should clear auth state"
        }
      ],
      "count": 2
    },
    {
      "description": "Performance Regression Detection",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\performance-validation.test.ts",
          "description": "Performance Regression Detection"
        },
        {
          "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
          "description": "Performance Regression Detection"
        }
      ],
      "count": 2
    },
    {
      "description": "Configuration",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
          "description": "Configuration"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "description": "Configuration"
        }
      ],
      "count": 2
    },
    {
      "description": "should return current configuration",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
          "description": "should return current configuration"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "description": "should return current configuration"
        }
      ],
      "count": 2
    },
    {
      "description": "should update configuration",
      "occurrences": [
        {
          "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
          "description": "should update configuration"
        },
        {
          "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
          "description": "should update configuration"
        }
      ],
      "count": 2
    },
    {
      "description": "Performance and Load Testing",
      "occurrences": [
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "description": "Performance and Load Testing"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "description": "Performance and Load Testing"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle complete error recovery flow",
      "occurrences": [
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "description": "should handle complete error recovery flow"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "description": "should handle complete error recovery flow"
        }
      ],
      "count": 2
    },
    {
      "description": "should maintain user roles and permissions after migration",
      "occurrences": [
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "description": "should maintain user roles and permissions after migration"
        },
        {
          "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
          "description": "should maintain user roles and permissions after migration"
        }
      ],
      "count": 2
    },
    {
      "description": "@",
      "occurrences": [
        {
          "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
          "description": "@"
        },
        {
          "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
          "description": "@"
        }
      ],
      "count": 2
    },
    {
      "description": "UI Component Integration",
      "occurrences": [
        {
          "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
          "description": "UI Component Integration"
        },
        {
          "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
          "description": "UI Component Integration"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle client initialization failure gracefully",
      "occurrences": [
        {
          "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
          "description": "should handle client initialization failure gracefully"
        },
        {
          "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
          "description": "should handle client initialization failure gracefully"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle sign-out flow",
      "occurrences": [
        {
          "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
          "description": "should handle sign-out flow"
        },
        {
          "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
          "description": "should handle sign-out flow"
        }
      ],
      "count": 2
    },
    {
      "description": "should properly cleanup subscriptions on unmount",
      "occurrences": [
        {
          "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
          "description": "should properly cleanup subscriptions on unmount"
        },
        {
          "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
          "description": "should properly cleanup subscriptions on unmount"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle HTTP errors",
      "occurrences": [
        {
          "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
          "description": "should handle HTTP errors"
        },
        {
          "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
          "description": "should handle HTTP errors"
        }
      ],
      "count": 2
    },
    {
      "description": "should validate reservation time constraints",
      "occurrences": [
        {
          "file": "src\\__tests__\\integration\\data-integrity-comprehensive.test.ts",
          "description": "should validate reservation time constraints"
        },
        {
          "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
          "description": "should validate reservation time constraints"
        }
      ],
      "count": 2
    },
    {
      "description": "should reject invalid UUID formats",
      "occurrences": [
        {
          "file": "src\\__tests__\\middleware\\validation.test.ts",
          "description": "should reject invalid UUID formats"
        },
        {
          "file": "src\\__tests__\\security\\user-id-guards.test.ts",
          "description": "should reject invalid UUID formats"
        }
      ],
      "count": 2
    },
    {
      "description": "should sanitize sensitive data in logs",
      "occurrences": [
        {
          "file": "src\\__tests__\\monitoring\\environment-logging-integration.test.ts",
          "description": "should sanitize sensitive data in logs"
        },
        {
          "file": "src\\__tests__\\security\\enhanced-logging.test.ts",
          "description": "should sanitize sensitive data in logs"
        }
      ],
      "count": 2
    },
    {
      "description": "Performance Metrics",
      "occurrences": [
        {
          "file": "src\\__tests__\\monitoring\\environment-monitor.test.ts",
          "description": "Performance Metrics"
        },
        {
          "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
          "description": "Performance Metrics"
        }
      ],
      "count": 2
    },
    {
      "description": "Memory Management",
      "occurrences": [
        {
          "file": "src\\__tests__\\monitoring\\environment-monitor.test.ts",
          "description": "Memory Management"
        },
        {
          "file": "src\\__tests__\\monitoring\\security-monitor.test.ts",
          "description": "Memory Management"
        },
        {
          "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
          "description": "Memory Management"
        }
      ],
      "count": 3
    },
    {
      "description": "should resolve alerts",
      "occurrences": [
        {
          "file": "src\\__tests__\\monitoring\\environment-monitor.test.ts",
          "description": "should resolve alerts"
        },
        {
          "file": "src\\__tests__\\monitoring\\security-monitor.test.ts",
          "description": "should resolve alerts"
        }
      ],
      "count": 2
    },
    {
      "description": "Memory Usage Performance",
      "occurrences": [
        {
          "file": "src\\__tests__\\monitoring\\environment-monitoring-performance.test.ts",
          "description": "Memory Usage Performance"
        },
        {
          "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
          "description": "Memory Usage Performance"
        }
      ],
      "count": 2
    },
    {
      "description": "should validate required parameters",
      "occurrences": [
        {
          "file": "src\\__tests__\\pagination.test.ts",
          "description": "should validate required parameters"
        },
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "description": "should validate required parameters"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle cache invalidation errors gracefully",
      "occurrences": [
        {
          "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
          "description": "should handle cache invalidation errors gracefully"
        },
        {
          "file": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
          "description": "should handle cache invalidation errors gracefully"
        }
      ],
      "count": 2
    },
    {
      "description": "should cleanup listeners on unmount",
      "occurrences": [
        {
          "file": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
          "description": "should cleanup listeners on unmount"
        },
        {
          "file": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
          "description": "should cleanup listeners on unmount"
        }
      ],
      "count": 2
    },
    {
      "description": "\\n",
      "occurrences": [
        {
          "file": "src\\__tests__\\runners\\automated-test-runner.ts",
          "description": "\\n"
        },
        {
          "file": "src\\__tests__\\runners\\comprehensive-test-runner.ts",
          "description": "\\n"
        }
      ],
      "count": 2
    },
    {
      "description": "=",
      "occurrences": [
        {
          "file": "src\\__tests__\\runners\\automated-test-runner.ts",
          "description": "="
        },
        {
          "file": "src\\__tests__\\runners\\automated-test-runner.ts",
          "description": "="
        }
      ],
      "count": 2
    },
    {
      "description": "Input Validation",
      "occurrences": [
        {
          "file": "src\\__tests__\\security\\api-security.test.ts",
          "description": "Input Validation"
        },
        {
          "file": "src\\__tests__\\security\\rpc-security.test.ts",
          "description": "Input Validation"
        }
      ],
      "count": 2
    },
    {
      "description": "Data Integrity Validation",
      "occurrences": [
        {
          "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
          "description": "Data Integrity Validation"
        },
        {
          "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
          "description": "Data Integrity Validation"
        }
      ],
      "count": 2
    },
    {
      "description": "Service Role Key Access",
      "occurrences": [
        {
          "file": "src\\__tests__\\security\\environment-manager.test.ts",
          "description": "Service Role Key Access"
        },
        {
          "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
          "description": "Service Role Key Access"
        }
      ],
      "count": 2
    },
    {
      "description": "should skip reservations that do not need fixing",
      "occurrences": [
        {
          "file": "src\\__tests__\\security\\fix-reservation-integration.test.ts",
          "description": "should skip reservations that do not need fixing"
        },
        {
          "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
          "description": "should skip reservations that do not need fixing"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle reservation not found",
      "occurrences": [
        {
          "file": "src\\__tests__\\security\\fix-reservation-integration.test.ts",
          "description": "should handle reservation not found"
        },
        {
          "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
          "description": "should handle reservation not found"
        }
      ],
      "count": 2
    },
    {
      "description": "should handle uncorrectable user_id errors",
      "occurrences": [
        {
          "file": "src\\__tests__\\security\\fix-reservation-integration.test.ts",
          "description": "should handle uncorrectable user_id errors"
        },
        {
          "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
          "description": "should handle uncorrectable user_id errors"
        }
      ],
      "count": 2
    },
    {
      "description": "should accept custom configuration",
      "occurrences": [
        {
          "file": "src\\__tests__\\security\\fix-reservation-integration.test.ts",
          "description": "should accept custom configuration"
        },
        {
          "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
          "description": "should accept custom configuration"
        }
      ],
      "count": 2
    },
    {
      "description": "should successfully get public environment variable",
      "occurrences": [
        {
          "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
          "description": "should successfully get public environment variable"
        },
        {
          "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
          "description": "should successfully get public environment variable"
        }
      ],
      "count": 2
    },
    {
      "description": "should successfully get server environment variable",
      "occurrences": [
        {
          "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
          "description": "should successfully get server environment variable"
        },
        {
          "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
          "description": "should successfully get server environment variable"
        }
      ],
      "count": 2
    }
  ],
  "inconsistentStructures": [
    {
      "type": "naming_inconsistency",
      "description": "테스트 파일 네이밍 패턴이 일관되지 않음",
      "patterns": [
        "test",
        "directory"
      ],
      "severity": "medium"
    }
  ],
  "standardizationPlan": {
    "namingStandardization": {
      "recommended": "test",
      "changes": [],
      "reason": ".test. 패턴이 가장 널리 사용됨"
    },
    "directoryStandardization": {
      "recommended": "tests_directory",
      "changes": [],
      "reason": "테스트 파일들을 별도 디렉토리로 분리하여 구조 명확화"
    },
    "utilityConsolidation": {
      "duplicateUtilities": [
        {
          "name": "mockCreateClient",
          "occurrences": [
            {
              "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
              "name": "mockCreateClient"
            },
            {
              "file": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
              "name": "mockCreateClient"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockCreateClient"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockCreateClient"
            },
            {
              "file": "src\\__tests__\\security\\rpc-security.test.ts",
              "name": "mockCreateClient"
            }
          ],
          "count": 5
        },
        {
          "name": "mockWindowClose",
          "occurrences": [
            {
              "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
              "name": "mockWindowClose"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\window-close.test.ts",
              "name": "mockWindowClose"
            }
          ],
          "count": 2
        },
        {
          "name": "mockUser",
          "occurrences": [
            {
              "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\integration\\data-integrity-comprehensive.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            }
          ],
          "count": 62
        },
        {
          "name": "mockUseSupabaseClient",
          "occurrences": [
            {
              "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
              "name": "mockUseSupabaseClient"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockUseSupabaseClient"
            }
          ],
          "count": 2
        },
        {
          "name": "mockSupabaseClient",
          "occurrences": [
            {
              "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\contexts\\__tests__\\SupabaseProvider.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\supabase\\__tests__\\client.test.ts",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\__tests__\\integration\\data-integrity-comprehensive.test.ts",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "name": "mockSupabaseClient"
            }
          ],
          "count": 15
        },
        {
          "name": "mockUserProfile",
          "occurrences": [
            {
              "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
              "name": "mockUserProfile"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "name": "mockUserProfile"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockUserProfile"
            },
            {
              "file": "src\\hooks\\__tests__\\useNavigationController.test.ts",
              "name": "mockUserProfile"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "name": "mockUserProfile"
            }
          ],
          "count": 5
        },
        {
          "name": "TestComponent",
          "occurrences": [
            {
              "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\contexts\\__tests__\\SupabaseProvider.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            }
          ],
          "count": 14
        },
        {
          "name": "mockGetClientManager",
          "occurrences": [
            {
              "file": "src\\contexts\\__tests__\\SupabaseProvider.test.tsx",
              "name": "mockGetClientManager"
            },
            {
              "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
              "name": "mockGetClientManager"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "name": "mockGetClientManager"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "mockGetClientManager"
            }
          ],
          "count": 4
        },
        {
          "name": "mockUseAuth",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm.test.tsx",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\hooks\\__tests__\\useNavigationController.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            }
          ],
          "count": 14
        },
        {
          "name": "mockUseToast",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
              "name": "mockUseToast"
            },
            {
              "file": "src\\hooks\\__tests__\\useNavigationController.test.ts",
              "name": "mockUseToast"
            }
          ],
          "count": 2
        },
        {
          "name": "mockRequestOTP",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockRequestOTP"
            }
          ],
          "count": 32
        },
        {
          "name": "mockVerifyOTP",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockVerifyOTP"
            }
          ],
          "count": 23
        },
        {
          "name": "mockToast",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
              "name": "mockToast"
            },
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "name": "mockToast"
            },
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm.test.tsx",
              "name": "mockToast"
            },
            {
              "file": "src\\hooks\\__tests__\\useNavigationController.test.ts",
              "name": "mockToast"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "name": "mockToast"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockToast"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockToast"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockToast"
            }
          ],
          "count": 8
        },
        {
          "name": "mockRouter",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "name": "mockRouter"
            },
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm.test.tsx",
              "name": "mockRouter"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "name": "mockRouter"
            }
          ],
          "count": 3
        },
        {
          "name": "mockReload",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm.test.tsx",
              "name": "mockReload"
            },
            {
              "file": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
              "name": "mockReload"
            }
          ],
          "count": 2
        },
        {
          "name": "mockSupabaseAuth",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "name": "mockSupabaseAuth"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "name": "mockSupabaseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockSupabaseAuth"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockSupabaseAuth"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockSupabaseAuth"
            },
            {
              "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
              "name": "mockSupabaseAuth"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockSupabaseAuth"
            }
          ],
          "count": 7
        },
        {
          "name": "mockSupabase",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "name": "mockSupabase"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "name": "mockSupabase"
            },
            {
              "file": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
              "name": "mockSupabase"
            },
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "name": "mockSupabase"
            },
            {
              "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
              "name": "mockSupabase"
            }
          ],
          "count": 5
        },
        {
          "name": "mockGetNetworkStatus",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockGetNetworkStatus"
            }
          ],
          "count": 9
        },
        {
          "name": "mockIsNetworkError",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockIsNetworkError"
            }
          ],
          "count": 9
        },
        {
          "name": "mockSession",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            }
          ],
          "count": 30
        },
        {
          "name": "mockData",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockData"
            },
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "name": "mockData"
            },
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "name": "mockData"
            },
            {
              "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
              "name": "mockData"
            },
            {
              "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
              "name": "mockData"
            },
            {
              "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
              "name": "mockData"
            },
            {
              "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
              "name": "mockData"
            }
          ],
          "count": 7
        },
        {
          "name": "mockPush",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockPush"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockPush"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "mockPush"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockPush"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockPush"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockPush"
            }
          ],
          "count": 6
        },
        {
          "name": "mockReplace",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockReplace"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockReplace"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "mockReplace"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockReplace"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockReplace"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockReplace"
            }
          ],
          "count": 6
        },
        {
          "name": "mockLocalStorage",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockLocalStorage"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockLocalStorage"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "mockLocalStorage"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockLocalStorage"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "mockLocalStorage"
            },
            {
              "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
              "name": "mockLocalStorage"
            }
          ],
          "count": 6
        },
        {
          "name": "mockAddEventListener",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockAddEventListener"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockAddEventListener"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockAddEventListener"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "mockAddEventListener"
            }
          ],
          "count": 4
        },
        {
          "name": "mockRemoveEventListener",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockRemoveEventListener"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockRemoveEventListener"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockRemoveEventListener"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "mockRemoveEventListener"
            }
          ],
          "count": 4
        },
        {
          "name": "TestWrapper",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "TestWrapper"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "TestWrapper"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "TestWrapper"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "TestWrapper"
            },
            {
              "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
              "name": "TestWrapper"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "name": "TestWrapper"
            }
          ],
          "count": 6
        },
        {
          "name": "MockSupabaseProvider",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "MockSupabaseProvider"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "MockSupabaseProvider"
            }
          ],
          "count": 2
        },
        {
          "name": "CountingTestComponent",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "CountingTestComponent"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "CountingTestComponent"
            }
          ],
          "count": 2
        },
        {
          "name": "mockLocation",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\__tests__\\auth\\auth-integration.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
              "name": "mockLocation"
            }
          ],
          "count": 9
        },
        {
          "name": "mockSecureAccess",
          "occurrences": [
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            }
          ],
          "count": 14
        },
        {
          "name": "mockResult",
          "occurrences": [
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockResult"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockResult"
            }
          ],
          "count": 2
        },
        {
          "name": "mockLogger",
          "occurrences": [
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockLogger"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockLogger"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "name": "mockLogger"
            }
          ],
          "count": 3
        },
        {
          "name": "mockConsoleLog",
          "occurrences": [
            {
              "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
              "name": "mockConsoleLog"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
              "name": "mockConsoleLog"
            },
            {
              "file": "src\\__tests__\\security\\enhanced-logging.test.ts",
              "name": "mockConsoleLog"
            }
          ],
          "count": 3
        },
        {
          "name": "mockConsoleWarn",
          "occurrences": [
            {
              "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
              "name": "mockConsoleWarn"
            },
            {
              "file": "src\\__tests__\\security\\enhanced-logging.test.ts",
              "name": "mockConsoleWarn"
            }
          ],
          "count": 2
        },
        {
          "name": "mockConsoleError",
          "occurrences": [
            {
              "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
              "name": "mockConsoleError"
            },
            {
              "file": "src\\__tests__\\security\\enhanced-logging.test.ts",
              "name": "mockConsoleError"
            }
          ],
          "count": 2
        },
        {
          "name": "mockValidationResult",
          "occurrences": [
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            }
          ],
          "count": 8
        },
        {
          "name": "mockCreateBrowserClient",
          "occurrences": [
            {
              "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
              "name": "mockCreateBrowserClient"
            },
            {
              "file": "src\\lib\\supabase\\__tests__\\client.test.ts",
              "name": "mockCreateBrowserClient"
            }
          ],
          "count": 2
        },
        {
          "name": "mockGetPublicEnvVar",
          "occurrences": [
            {
              "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
              "name": "mockGetPublicEnvVar"
            },
            {
              "file": "src\\lib\\supabase\\__tests__\\client.test.ts",
              "name": "mockGetPublicEnvVar"
            }
          ],
          "count": 2
        },
        {
          "name": "mockEnv",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\deployment-info.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            }
          ],
          "count": 9
        },
        {
          "name": "mockPaginatedData",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "name": "mockPaginatedData"
            },
            {
              "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
              "name": "mockPaginatedData"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockPaginatedData"
            }
          ],
          "count": 3
        },
        {
          "name": "mockAnonymousData",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "name": "mockAnonymousData"
            },
            {
              "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
              "name": "mockAnonymousData"
            }
          ],
          "count": 2
        },
        {
          "name": "mockResponse",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\usePaginatedReservations.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\usePaginatedReservations.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\usePaginatedReservations.test.ts",
              "name": "mockResponse"
            }
          ],
          "count": 12
        },
        {
          "name": "mockHandler",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            }
          ],
          "count": 15
        },
        {
          "name": "createMockLocalStorage",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
              "name": "createMockLocalStorage"
            },
            {
              "file": "src\\__tests__\\auth\\performance-validation.test.ts",
              "name": "createMockLocalStorage"
            }
          ],
          "count": 2
        },
        {
          "name": "pwaMock",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "pwaMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "pwaMock"
            }
          ],
          "count": 2
        },
        {
          "name": "localStorageMock",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\migration-script.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "name": "localStorageMock"
            }
          ],
          "count": 13
        },
        {
          "name": "mockCallback",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
              "name": "mockCallback"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "name": "mockCallback"
            }
          ],
          "count": 2
        },
        {
          "name": "mockReservations",
          "occurrences": [
            {
              "file": "src\\__tests__\\components\\InfiniteReservationList.test.tsx",
              "name": "mockReservations"
            },
            {
              "file": "src\\__tests__\\components\\InfiniteReservationList.test.tsx",
              "name": "mockReservations"
            }
          ],
          "count": 2
        },
        {
          "name": "mockFetchNextPage",
          "occurrences": [
            {
              "file": "src\\__tests__\\components\\InfiniteReservationList.test.tsx",
              "name": "mockFetchNextPage"
            },
            {
              "file": "src\\__tests__\\components\\InfiniteReservationList.test.tsx",
              "name": "mockFetchNextPage"
            }
          ],
          "count": 2
        },
        {
          "name": "mockSupabaseRpc",
          "occurrences": [
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockSupabaseRpc"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockSupabaseRpc"
            }
          ],
          "count": 2
        },
        {
          "name": "mockIsPWAEnvironment",
          "occurrences": [
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockIsPWAEnvironment"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockIsPWAEnvironment"
            }
          ],
          "count": 2
        },
        {
          "name": "mockGetPWACapabilities",
          "occurrences": [
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockGetPWACapabilities"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockGetPWACapabilities"
            }
          ],
          "count": 2
        },
        {
          "name": "mockCleanup",
          "occurrences": [
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockCleanup"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockCleanup"
            }
          ],
          "count": 2
        },
        {
          "name": "mockGitignore",
          "occurrences": [
            {
              "file": "src\\__tests__\\deployment\\platform-integration.test.ts",
              "name": "mockGitignore"
            },
            {
              "file": "src\\__tests__\\deployment\\platform-integration.test.ts",
              "name": "mockGitignore"
            }
          ],
          "count": 2
        },
        {
          "name": "unsubscribeMock",
          "occurrences": [
            {
              "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
              "name": "unsubscribeMock"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "unsubscribeMock"
            }
          ],
          "count": 2
        },
        {
          "name": "mockFetch",
          "occurrences": [
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockFetch"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "name": "mockFetch"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "name": "mockFetch"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockFetch"
            }
          ],
          "count": 4
        },
        {
          "name": "mockPage",
          "occurrences": [
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockPage"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockPage"
            }
          ],
          "count": 2
        },
        {
          "name": "mockPages",
          "occurrences": [
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockPages"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockPages"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockPages"
            }
          ],
          "count": 3
        },
        {
          "name": "mockQuery",
          "occurrences": [
            {
              "file": "src\\__tests__\\integration\\data-integrity-comprehensive.test.ts",
              "name": "mockQuery"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockQuery"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
              "name": "mockQuery"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "name": "mockQuery"
            },
            {
              "file": "src\\__tests__\\setup\\test-infrastructure.setup.ts",
              "name": "mockQuery"
            }
          ],
          "count": 5
        },
        {
          "name": "mockPerformanceMonitor",
          "occurrences": [
            {
              "file": "src\\__tests__\\integration\\security-performance-monitoring.test.ts",
              "name": "mockPerformanceMonitor"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockPerformanceMonitor"
            }
          ],
          "count": 2
        },
        {
          "name": "mockAuthOperation",
          "occurrences": [
            {
              "file": "src\\__tests__\\integration\\security-performance-monitoring.test.ts",
              "name": "mockAuthOperation"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockAuthOperation"
            }
          ],
          "count": 2
        },
        {
          "name": "mockRpcFunction",
          "occurrences": [
            {
              "file": "src\\__tests__\\integration\\security-performance-monitoring.test.ts",
              "name": "mockRpcFunction"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockRpcFunction"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockRpcFunction"
            }
          ],
          "count": 3
        },
        {
          "name": "mockEnvironmentCheck",
          "occurrences": [
            {
              "file": "src\\__tests__\\integration\\security-performance-monitoring.test.ts",
              "name": "mockEnvironmentCheck"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockEnvironmentCheck"
            }
          ],
          "count": 2
        },
        {
          "name": "mockClient",
          "occurrences": [
            {
              "file": "src\\__tests__\\integration\\test-infrastructure-integration.test.ts",
              "name": "mockClient"
            },
            {
              "file": "src\\__tests__\\integration\\test-infrastructure-integration.test.ts",
              "name": "mockClient"
            }
          ],
          "count": 2
        },
        {
          "name": "mockCreateServerClient",
          "occurrences": [
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "name": "mockCreateServerClient"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockCreateServerClient"
            }
          ],
          "count": 2
        },
        {
          "name": "mockCookies",
          "occurrences": [
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "name": "mockCookies"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockCookies"
            }
          ],
          "count": 2
        },
        {
          "name": "mockRegister",
          "occurrences": [
            {
              "file": "src\\__tests__\\polyfills\\ClientPolyfillManager.test.tsx",
              "name": "mockRegister"
            },
            {
              "file": "src\\__tests__\\polyfills\\ClientPolyfillManager.test.tsx",
              "name": "mockRegister"
            }
          ],
          "count": 2
        },
        {
          "name": "mockServiceWorker",
          "occurrences": [
            {
              "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
              "name": "mockServiceWorker"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockServiceWorker"
            }
          ],
          "count": 2
        },
        {
          "name": "mockElement",
          "occurrences": [
            {
              "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
              "name": "mockElement"
            },
            {
              "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
              "name": "mockElement"
            }
          ],
          "count": 2
        },
        {
          "name": "mockRegistration",
          "occurrences": [
            {
              "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
              "name": "mockRegistration"
            },
            {
              "file": "src\\__tests__\\security\\third-party-dependencies.test.ts",
              "name": "mockRegistration"
            }
          ],
          "count": 2
        },
        {
          "name": "mockRemoveListener",
          "occurrences": [
            {
              "file": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
              "name": "mockRemoveListener"
            },
            {
              "file": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
              "name": "mockRemoveListener"
            }
          ],
          "count": 2
        },
        {
          "name": "mockUsers",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
              "name": "mockUsers"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
              "name": "mockUsers"
            }
          ],
          "count": 2
        },
        {
          "name": "mockGetServiceRoleKey",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "name": "mockGetServiceRoleKey"
            },
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "name": "mockGetServiceRoleKey"
            },
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "name": "mockGetServiceRoleKey"
            },
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "name": "mockGetServiceRoleKey"
            }
          ],
          "count": 4
        },
        {
          "name": "mockConfig",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\third-party-dependencies.test.ts",
              "name": "mockConfig"
            },
            {
              "file": "src\\__tests__\\security\\third-party-dependencies.test.ts",
              "name": "mockConfig"
            }
          ],
          "count": 2
        }
      ],
      "recommendations": [
        {
          "utilityName": "mockCreateClient",
          "occurrences": [
            {
              "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
              "name": "mockCreateClient"
            },
            {
              "file": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
              "name": "mockCreateClient"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockCreateClient"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockCreateClient"
            },
            {
              "file": "src\\__tests__\\security\\rpc-security.test.ts",
              "name": "mockCreateClient"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockUser",
          "occurrences": [
            {
              "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\integration\\data-integrity-comprehensive.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "name": "mockUser"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockSupabaseClient",
          "occurrences": [
            {
              "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\contexts\\__tests__\\SupabaseProvider.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\lib\\supabase\\__tests__\\client.test.ts",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\__tests__\\integration\\data-integrity-comprehensive.test.ts",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
              "name": "mockSupabaseClient"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "name": "mockSupabaseClient"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockUserProfile",
          "occurrences": [
            {
              "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
              "name": "mockUserProfile"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "name": "mockUserProfile"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockUserProfile"
            },
            {
              "file": "src\\hooks\\__tests__\\useNavigationController.test.ts",
              "name": "mockUserProfile"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "name": "mockUserProfile"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "TestComponent",
          "occurrences": [
            {
              "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\contexts\\__tests__\\SupabaseProvider.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "TestComponent"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockGetClientManager",
          "occurrences": [
            {
              "file": "src\\contexts\\__tests__\\SupabaseProvider.test.tsx",
              "name": "mockGetClientManager"
            },
            {
              "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
              "name": "mockGetClientManager"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "name": "mockGetClientManager"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "name": "mockGetClientManager"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockUseAuth",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm.test.tsx",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\hooks\\__tests__\\useNavigationController.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockUseAuth"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockRequestOTP",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockRequestOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockRequestOTP"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockVerifyOTP",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockVerifyOTP"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockVerifyOTP"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockToast",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
              "name": "mockToast"
            },
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "name": "mockToast"
            },
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm.test.tsx",
              "name": "mockToast"
            },
            {
              "file": "src\\hooks\\__tests__\\useNavigationController.test.ts",
              "name": "mockToast"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "name": "mockToast"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockToast"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockToast"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockToast"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockRouter",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "name": "mockRouter"
            },
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm.test.tsx",
              "name": "mockRouter"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "name": "mockRouter"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockSupabaseAuth",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "name": "mockSupabaseAuth"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "name": "mockSupabaseAuth"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockSupabaseAuth"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockSupabaseAuth"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockSupabaseAuth"
            },
            {
              "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
              "name": "mockSupabaseAuth"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockSupabaseAuth"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockSupabase",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "name": "mockSupabase"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "name": "mockSupabase"
            },
            {
              "file": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
              "name": "mockSupabase"
            },
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "name": "mockSupabase"
            },
            {
              "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
              "name": "mockSupabase"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockGetNetworkStatus",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
              "name": "mockGetNetworkStatus"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockGetNetworkStatus"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockIsNetworkError",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
              "name": "mockIsNetworkError"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockIsNetworkError"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockSession",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            },
            {
              "file": "src\\__tests__\\security\\authentication-authorization.test.ts",
              "name": "mockSession"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockData",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "name": "mockData"
            },
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "name": "mockData"
            },
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "name": "mockData"
            },
            {
              "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
              "name": "mockData"
            },
            {
              "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
              "name": "mockData"
            },
            {
              "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
              "name": "mockData"
            },
            {
              "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
              "name": "mockData"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockPush",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockPush"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockPush"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "mockPush"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockPush"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockPush"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockPush"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockReplace",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockReplace"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockReplace"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "mockReplace"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockReplace"
            },
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "name": "mockReplace"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "name": "mockReplace"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockLocalStorage",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockLocalStorage"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockLocalStorage"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
              "name": "mockLocalStorage"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockLocalStorage"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "mockLocalStorage"
            },
            {
              "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
              "name": "mockLocalStorage"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockAddEventListener",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockAddEventListener"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockAddEventListener"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockAddEventListener"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "mockAddEventListener"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockRemoveEventListener",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "mockRemoveEventListener"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "mockRemoveEventListener"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "mockRemoveEventListener"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "mockRemoveEventListener"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "TestWrapper",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "name": "TestWrapper"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "name": "TestWrapper"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "name": "TestWrapper"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "name": "TestWrapper"
            },
            {
              "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
              "name": "TestWrapper"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "name": "TestWrapper"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockLocation",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\__tests__\\auth\\auth-integration.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
              "name": "mockLocation"
            },
            {
              "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
              "name": "mockLocation"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockSecureAccess",
          "occurrences": [
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockSecureAccess"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockLogger",
          "occurrences": [
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockLogger"
            },
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "name": "mockLogger"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "name": "mockLogger"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockConsoleLog",
          "occurrences": [
            {
              "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
              "name": "mockConsoleLog"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
              "name": "mockConsoleLog"
            },
            {
              "file": "src\\__tests__\\security\\enhanced-logging.test.ts",
              "name": "mockConsoleLog"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockValidationResult",
          "occurrences": [
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "name": "mockValidationResult"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockEnv",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\deployment-info.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            },
            {
              "file": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
              "name": "mockEnv"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockPaginatedData",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "name": "mockPaginatedData"
            },
            {
              "file": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
              "name": "mockPaginatedData"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockPaginatedData"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockResponse",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\usePaginatedReservations.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\usePaginatedReservations.test.ts",
              "name": "mockResponse"
            },
            {
              "file": "src\\__tests__\\usePaginatedReservations.test.ts",
              "name": "mockResponse"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockHandler",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            },
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "name": "mockHandler"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "localStorageMock",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\migration-script.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
              "name": "localStorageMock"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "name": "localStorageMock"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockFetch",
          "occurrences": [
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockFetch"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "name": "mockFetch"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "name": "mockFetch"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "name": "mockFetch"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockPages",
          "occurrences": [
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockPages"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockPages"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "name": "mockPages"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockQuery",
          "occurrences": [
            {
              "file": "src\\__tests__\\integration\\data-integrity-comprehensive.test.ts",
              "name": "mockQuery"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockQuery"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
              "name": "mockQuery"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "name": "mockQuery"
            },
            {
              "file": "src\\__tests__\\setup\\test-infrastructure.setup.ts",
              "name": "mockQuery"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockRpcFunction",
          "occurrences": [
            {
              "file": "src\\__tests__\\integration\\security-performance-monitoring.test.ts",
              "name": "mockRpcFunction"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockRpcFunction"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "name": "mockRpcFunction"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        },
        {
          "utilityName": "mockGetServiceRoleKey",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "name": "mockGetServiceRoleKey"
            },
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "name": "mockGetServiceRoleKey"
            },
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "name": "mockGetServiceRoleKey"
            },
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "name": "mockGetServiceRoleKey"
            }
          ],
          "recommendation": "공통 테스트 유틸리티 파일로 추출 권장",
          "suggestedLocation": "src/__tests__/utils/"
        }
      ]
    },
    "testDeduplication": {
      "duplicateTests": [
        {
          "description": "Error Scenarios",
          "occurrences": [
            {
              "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
              "description": "Error Scenarios"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\migration-end-to-end.test.ts",
              "description": "Error Scenarios"
            },
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "description": "Error Scenarios"
            }
          ],
          "count": 3
        },
        {
          "description": "Keyboard Navigation",
          "occurrences": [
            {
              "file": "src\\components\\ui\\__tests__\\otp-input.test.tsx",
              "description": "Keyboard Navigation"
            },
            {
              "file": "src\\__tests__\\accessibility\\otp-accessibility.test.ts",
              "description": "Keyboard Navigation"
            }
          ],
          "count": 2
        },
        {
          "description": "Focus Management",
          "occurrences": [
            {
              "file": "src\\components\\ui\\__tests__\\otp-input.test.tsx",
              "description": "Focus Management"
            },
            {
              "file": "src\\__tests__\\accessibility\\otp-accessibility.test.ts",
              "description": "Focus Management"
            }
          ],
          "count": 2
        },
        {
          "description": "Accessibility",
          "occurrences": [
            {
              "file": "src\\components\\ui\\__tests__\\otp-input.test.tsx",
              "description": "Accessibility"
            },
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "description": "Accessibility"
            }
          ],
          "count": 2
        },
        {
          "description": "Edge Cases",
          "occurrences": [
            {
              "file": "src\\components\\ui\\__tests__\\otp-input.test.tsx",
              "description": "Edge Cases"
            },
            {
              "file": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
              "description": "Edge Cases"
            },
            {
              "file": "src\\__tests__\\pagination.test.ts",
              "description": "Edge Cases"
            }
          ],
          "count": 3
        },
        {
          "description": "Provider initialization",
          "occurrences": [
            {
              "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
              "description": "Provider initialization"
            },
            {
              "file": "src\\contexts\\__tests__\\SupabaseProvider.test.tsx",
              "description": "Provider initialization"
            }
          ],
          "count": 2
        },
        {
          "description": "should categorize network errors correctly",
          "occurrences": [
            {
              "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
              "description": "should categorize network errors correctly"
            },
            {
              "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
              "description": "should categorize network errors correctly"
            },
            {
              "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
              "description": "should categorize network errors correctly"
            }
          ],
          "count": 3
        },
        {
          "description": "PWA Environment Detection",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "description": "PWA Environment Detection"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "description": "PWA Environment Detection"
            }
          ],
          "count": 2
        },
        {
          "description": "Error Handling",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\auth\\migration-script.test.ts",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\enhanced-type-system.test.ts",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\pagination.test.ts",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
              "description": "Error Handling"
            }
          ],
          "count": 9
        },
        {
          "description": "should render signup form with all required fields",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "description": "should render signup form with all required fields"
            },
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm.basic.test.tsx",
              "description": "should render signup form with all required fields"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle duplicate email error",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "description": "should handle duplicate email error"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
              "description": "should handle duplicate email error"
            },
            {
              "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
              "description": "should handle duplicate email error"
            }
          ],
          "count": 3
        },
        {
          "description": "should validate required fields",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "description": "should validate required fields"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "description": "should validate required fields"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle offline state correctly",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "description": "should handle offline state correctly"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "description": "should handle offline state correctly"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle missing session data",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "description": "should handle missing session data"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle missing session data"
            }
          ],
          "count": 2
        },
        {
          "description": "should provide appropriate offline messaging",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
              "description": "should provide appropriate offline messaging"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
              "description": "should provide appropriate offline messaging"
            }
          ],
          "count": 2
        },
        {
          "description": "Session Compatibility",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
              "description": "Session Compatibility"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
              "description": "Session Compatibility"
            }
          ],
          "count": 2
        },
        {
          "description": "Backward Compatibility",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
              "description": "Backward Compatibility"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\migration-integration.test.ts",
              "description": "Backward Compatibility"
            }
          ],
          "count": 2
        },
        {
          "description": "PWA Compatibility",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
              "description": "PWA Compatibility"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\migration-integration.test.ts",
              "description": "PWA Compatibility"
            }
          ],
          "count": 2
        },
        {
          "description": "should throw error when supabase is not available",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should throw error when supabase is not available"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should throw error when supabase is not available"
            }
          ],
          "count": 2
        },
        {
          "description": "should throw error when offline",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should throw error when offline"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should throw error when offline"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle user not found error",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle user not found error"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle user not found error"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "description": "should handle user not found error"
            }
          ],
          "count": 3
        },
        {
          "description": "should handle rate limit error",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle rate limit error"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle rate limit error"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "description": "should handle rate limit error"
            }
          ],
          "count": 3
        },
        {
          "description": "should handle invalid email error",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle invalid email error"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
              "description": "should handle invalid email error"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle network errors",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle network errors"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle network errors"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "description": "should handle network errors"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "description": "should handle network errors"
            }
          ],
          "count": 4
        },
        {
          "description": "Basic functionality",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "description": "Basic functionality"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "description": "Basic functionality"
            }
          ],
          "count": 2
        },
        {
          "description": "should stop polling after max retries (3 attempts)",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "description": "should stop polling after max retries (3 attempts)"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "description": "should stop polling after max retries (3 attempts)"
            }
          ],
          "count": 2
        },
        {
          "description": "should not start polling on /dashboard page",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "description": "should not start polling on /dashboard page"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "description": "should not start polling on /dashboard page"
            }
          ],
          "count": 2
        },
        {
          "description": "should not start polling on /reservations page",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "description": "should not start polling on /reservations page"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "description": "should not start polling on /reservations page"
            }
          ],
          "count": 2
        },
        {
          "description": "should not trigger any polling when user is authenticated",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "description": "should not trigger any polling when user is authenticated"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "description": "should not trigger any polling when user is authenticated"
            }
          ],
          "count": 2
        },
        {
          "description": "should use correct exponential backoff intervals (2s, 4s, 8s)",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "description": "should use correct exponential backoff intervals (2s, 4s, 8s)"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "description": "should use correct exponential backoff intervals (2s, 4s, 8s)"
            }
          ],
          "count": 2
        },
        {
          "description": "should detect magic link authentication within 2 seconds via polling",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "description": "should detect magic link authentication within 2 seconds via polling"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "description": "should detect magic link authentication within 2 seconds via polling"
            }
          ],
          "count": 2
        },
        {
          "description": "should stop all polling immediately after successful authentication",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "description": "should stop all polling immediately after successful authentication"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "description": "should stop all polling immediately after successful authentication"
            }
          ],
          "count": 2
        },
        {
          "description": "should not create memory leaks with multiple mount/unmount cycles",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "description": "should not create memory leaks with multiple mount/unmount cycles"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "description": "should not create memory leaks with multiple mount/unmount cycles"
            }
          ],
          "count": 2
        },
        {
          "description": "should check session once when app regains focus on login page",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "description": "should check session once when app regains focus on login page"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "description": "should check session once when app regains focus on login page"
            }
          ],
          "count": 2
        },
        {
          "description": "should properly cleanup all resources on unmount",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "description": "should properly cleanup all resources on unmount"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "description": "should properly cleanup all resources on unmount"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "description": "should properly cleanup all resources on unmount"
            }
          ],
          "count": 3
        },
        {
          "description": "Complete Authentication Flow",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "description": "Complete Authentication Flow"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "description": "Complete Authentication Flow"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle cleanup errors gracefully",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "description": "should handle cleanup errors gracefully"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "description": "should handle cleanup errors gracefully"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\window-close.test.ts",
              "description": "should handle cleanup errors gracefully"
            }
          ],
          "count": 3
        },
        {
          "description": "Error Recovery Scenarios",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "description": "Error Recovery Scenarios"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\e2e-scenarios.test.ts",
              "description": "Error Recovery Scenarios"
            }
          ],
          "count": 2
        },
        {
          "description": "Migration Compatibility",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "description": "Migration Compatibility"
            },
            {
              "file": "src\\__tests__\\auth\\auth-integration.test.ts",
              "description": "Migration Compatibility"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle invalid URLs gracefully",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "description": "should handle invalid URLs gracefully"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "description": "should handle invalid URLs gracefully"
            }
          ],
          "count": 2
        },
        {
          "description": "should detect missing required fields",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "description": "should detect missing required fields"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
              "description": "should detect missing required fields"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
              "description": "should detect missing required fields"
            }
          ],
          "count": 3
        },
        {
          "description": "should detect expired session",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "description": "should detect expired session"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
              "description": "should detect expired session"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle null session",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "description": "should handle null session"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
              "description": "should handle null session"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
              "description": "should handle null session"
            }
          ],
          "count": 3
        },
        {
          "description": "should work with existing session polling mechanism",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\migration-end-to-end.test.ts",
              "description": "should work with existing session polling mechanism"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\migration-integration.test.ts",
              "description": "should work with existing session polling mechanism"
            }
          ],
          "count": 2
        },
        {
          "description": "Error Handling Integration",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\migration-integration.test.ts",
              "description": "Error Handling Integration"
            },
            {
              "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
              "description": "Error Handling Integration"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "description": "Error Handling Integration"
            },
            {
              "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
              "description": "Error Handling Integration"
            }
          ],
          "count": 4
        },
        {
          "description": "constructor",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\SessionErrorHandler.test.ts",
              "description": "constructor"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\SessionPollingManager.test.ts",
              "description": "constructor"
            }
          ],
          "count": 2
        },
        {
          "description": "Convenience Functions",
          "occurrences": [
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "description": "Convenience Functions"
            },
            {
              "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
              "description": "Convenience Functions"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "description": "Convenience Functions"
            },
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "description": "Convenience Functions"
            }
          ],
          "count": 4
        },
        {
          "description": "validateEmailFormat",
          "occurrences": [
            {
              "file": "src\\lib\\email-validation\\__tests__\\email-validation-basic.test.ts",
              "description": "validateEmailFormat"
            },
            {
              "file": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
              "description": "validateEmailFormat"
            }
          ],
          "count": 2
        },
        {
          "description": "should validate correct email formats",
          "occurrences": [
            {
              "file": "src\\lib\\email-validation\\__tests__\\email-validation-basic.test.ts",
              "description": "should validate correct email formats"
            },
            {
              "file": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
              "description": "should validate correct email formats"
            }
          ],
          "count": 2
        },
        {
          "description": "should reject invalid email formats",
          "occurrences": [
            {
              "file": "src\\lib\\email-validation\\__tests__\\email-validation-basic.test.ts",
              "description": "should reject invalid email formats"
            },
            {
              "file": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
              "description": "should reject invalid email formats"
            }
          ],
          "count": 2
        },
        {
          "description": "Error Categorization",
          "occurrences": [
            {
              "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
              "description": "Error Categorization"
            },
            {
              "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
              "description": "Error Categorization"
            }
          ],
          "count": 2
        },
        {
          "description": "Singleton Pattern",
          "occurrences": [
            {
              "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
              "description": "Singleton Pattern"
            },
            {
              "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
              "description": "Singleton Pattern"
            },
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "description": "Singleton Pattern"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "Singleton Pattern"
            },
            {
              "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
              "description": "Singleton Pattern"
            }
          ],
          "count": 5
        },
        {
          "description": "should categorize environment errors correctly",
          "occurrences": [
            {
              "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
              "description": "should categorize environment errors correctly"
            },
            {
              "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
              "description": "should categorize environment errors correctly"
            }
          ],
          "count": 2
        },
        {
          "description": "getRedirectPath",
          "occurrences": [
            {
              "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
              "description": "getRedirectPath"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
              "description": "getRedirectPath"
            }
          ],
          "count": 2
        },
        {
          "description": "should return the same instance",
          "occurrences": [
            {
              "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
              "description": "should return the same instance"
            },
            {
              "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
              "description": "should return the same instance"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "should return the same instance"
            }
          ],
          "count": 3
        },
        {
          "description": "Route Configuration",
          "occurrences": [
            {
              "file": "src\\lib\\routes\\__tests__\\config.test.ts",
              "description": "Route Configuration"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\matcher.test.ts",
              "description": "Route Configuration"
            }
          ],
          "count": 2
        },
        {
          "description": "should return null for non-existent routes",
          "occurrences": [
            {
              "file": "src\\lib\\routes\\__tests__\\config.test.ts",
              "description": "should return null for non-existent routes"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\matcher.test.ts",
              "description": "should return null for non-existent routes"
            }
          ],
          "count": 2
        },
        {
          "description": "should return all public routes",
          "occurrences": [
            {
              "file": "src\\lib\\routes\\__tests__\\config.test.ts",
              "description": "should return all public routes"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\matcher.test.ts",
              "description": "should return all public routes"
            }
          ],
          "count": 2
        },
        {
          "description": "should return all semi-public routes",
          "occurrences": [
            {
              "file": "src\\lib\\routes\\__tests__\\config.test.ts",
              "description": "should return all semi-public routes"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\matcher.test.ts",
              "description": "should return all semi-public routes"
            }
          ],
          "count": 2
        },
        {
          "description": "should return all private routes",
          "occurrences": [
            {
              "file": "src\\lib\\routes\\__tests__\\config.test.ts",
              "description": "should return all private routes"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\matcher.test.ts",
              "description": "should return all private routes"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle reservation management workflow",
          "occurrences": [
            {
              "file": "src\\lib\\routes\\__tests__\\e2e-scenarios.test.ts",
              "description": "should handle reservation management workflow"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\integration.test.ts",
              "description": "should handle reservation management workflow"
            }
          ],
          "count": 2
        },
        {
          "description": "should get correct accessible routes list",
          "occurrences": [
            {
              "file": "src\\lib\\routes\\__tests__\\integration.test.ts",
              "description": "should get correct accessible routes list"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\integration.test.ts",
              "description": "should get correct accessible routes list"
            }
          ],
          "count": 2
        },
        {
          "description": "renders with default props",
          "occurrences": [
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "description": "renders with default props"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "description": "renders with default props"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "description": "renders with default props"
            }
          ],
          "count": 3
        },
        {
          "description": "handles home button click",
          "occurrences": [
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "description": "handles home button click"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "description": "handles home button click"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle validation errors gracefully",
          "occurrences": [
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "description": "should handle validation errors gracefully"
            },
            {
              "file": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
              "description": "should handle validation errors gracefully"
            }
          ],
          "count": 2
        },
        {
          "description": "Client Reinitialization",
          "occurrences": [
            {
              "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
              "description": "Client Reinitialization"
            },
            {
              "file": "src\\lib\\supabase\\__tests__\\client.test.ts",
              "description": "Client Reinitialization"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle network errors with retry capability",
          "occurrences": [
            {
              "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
              "description": "should handle network errors with retry capability"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "description": "should handle network errors with retry capability"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle configuration errors",
          "occurrences": [
            {
              "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
              "description": "should handle configuration errors"
            },
            {
              "file": "src\\lib\\supabase\\__tests__\\client.test.ts",
              "description": "should handle configuration errors"
            }
          ],
          "count": 2
        },
        {
          "description": "should use window.location.pathname when no pathname provided",
          "occurrences": [
            {
              "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
              "description": "should use window.location.pathname when no pathname provided"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
              "description": "should use window.location.pathname when no pathname provided"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle SSR environment",
          "occurrences": [
            {
              "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
              "description": "should handle SSR environment"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
              "description": "should handle SSR environment"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\error-messages.test.ts",
              "description": "should handle SSR environment"
            }
          ],
          "count": 3
        },
        {
          "description": "should detect standalone PWA mode",
          "occurrences": [
            {
              "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
              "description": "should detect standalone PWA mode"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "description": "should detect standalone PWA mode"
            }
          ],
          "count": 2
        },
        {
          "description": "should detect iOS standalone mode",
          "occurrences": [
            {
              "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
              "description": "should detect iOS standalone mode"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "description": "should detect iOS standalone mode"
            }
          ],
          "count": 2
        },
        {
          "description": "should detect minimal-ui PWA mode",
          "occurrences": [
            {
              "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
              "description": "should detect minimal-ui PWA mode"
            },
            {
              "file": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
              "description": "should detect minimal-ui PWA mode"
            }
          ],
          "count": 2
        },
        {
          "description": "should reject invalid email format",
          "occurrences": [
            {
              "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
              "description": "should reject invalid email format"
            },
            {
              "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
              "description": "should reject invalid email format"
            },
            {
              "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
              "description": "should reject invalid email format"
            },
            {
              "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
              "description": "should reject invalid email format"
            },
            {
              "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
              "description": "should reject invalid email format"
            },
            {
              "file": "src\\__tests__\\middleware\\validation.test.ts",
              "description": "should reject invalid email format"
            },
            {
              "file": "src\\__tests__\\middleware\\validation.test.ts",
              "description": "should reject invalid email format"
            }
          ],
          "count": 7
        },
        {
          "description": "signupSchema",
          "occurrences": [
            {
              "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
              "description": "signupSchema"
            },
            {
              "file": "src\\__tests__\\middleware\\validation.test.ts",
              "description": "signupSchema"
            }
          ],
          "count": 2
        },
        {
          "description": "Pagination Metadata Calculation",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "description": "Pagination Metadata Calculation"
            },
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "description": "Pagination Metadata Calculation"
            }
          ],
          "count": 2
        },
        {
          "description": "should validate limit parameter bounds",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "description": "should validate limit parameter bounds"
            },
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "description": "should validate limit parameter bounds"
            }
          ],
          "count": 2
        },
        {
          "description": "should validate offset parameter bounds",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "description": "should validate offset parameter bounds"
            },
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "description": "should validate offset parameter bounds"
            }
          ],
          "count": 2
        },
        {
          "description": "should calculate pagination metadata correctly",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "description": "should calculate pagination metadata correctly"
            },
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "description": "should calculate pagination metadata correctly"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle empty results",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "description": "should handle empty results"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "description": "should handle empty results"
            },
            {
              "file": "src\\__tests__\\pagination.test.ts",
              "description": "should handle empty results"
            }
          ],
          "count": 3
        },
        {
          "description": "Parameter Validation",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "description": "Parameter Validation"
            },
            {
              "file": "src\\__tests__\\pagination.test.ts",
              "description": "Parameter Validation"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle special characters in dates",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "description": "should handle special characters in dates"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "description": "should handle special characters in dates"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle last page correctly",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "description": "should handle last page correctly"
            },
            {
              "file": "src\\__tests__\\pagination.test.ts",
              "description": "should handle last page correctly"
            }
          ],
          "count": 2
        },
        {
          "description": "should validate reservation creation data",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "description": "should validate reservation creation data"
            },
            {
              "file": "src\\__tests__\\middleware\\validation.test.ts",
              "description": "should validate reservation creation data"
            }
          ],
          "count": 2
        },
        {
          "description": "should reject reservation with end time before start time",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\standardized-validation.test.ts",
              "description": "should reject reservation with end time before start time"
            },
            {
              "file": "src\\__tests__\\middleware\\validation.test.ts",
              "description": "should reject reservation with end time before start time"
            }
          ],
          "count": 2
        },
        {
          "description": "Alert System",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
              "description": "Alert System"
            },
            {
              "file": "src\\__tests__\\monitoring\\environment-monitor.test.ts",
              "description": "Alert System"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle callback errors gracefully",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
              "description": "should handle callback errors gracefully"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "should handle callback errors gracefully"
            }
          ],
          "count": 2
        },
        {
          "description": "should cleanup resources on destroy",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
              "description": "should cleanup resources on destroy"
            },
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "description": "should cleanup resources on destroy"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "should cleanup resources on destroy"
            }
          ],
          "count": 3
        },
        {
          "description": "Cross-Tab Communication",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\auth-integration.test.ts",
              "description": "Cross-Tab Communication"
            },
            {
              "file": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
              "description": "Cross-Tab Communication"
            }
          ],
          "count": 2
        },
        {
          "description": "Logging",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\migration-script.test.ts",
              "description": "Logging"
            },
            {
              "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
              "description": "Logging"
            }
          ],
          "count": 2
        },
        {
          "description": "Storage Management",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "description": "Storage Management"
            },
            {
              "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
              "description": "Storage Management"
            }
          ],
          "count": 2
        },
        {
          "description": "Cleanup",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "description": "Cleanup"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "Cleanup"
            }
          ],
          "count": 2
        },
        {
          "description": "should set and get auth state",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "description": "should set and get auth state"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "should set and get auth state"
            }
          ],
          "count": 2
        },
        {
          "description": "should clear auth state",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "description": "should clear auth state"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "should clear auth state"
            }
          ],
          "count": 2
        },
        {
          "description": "Performance Regression Detection",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\performance-validation.test.ts",
              "description": "Performance Regression Detection"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "description": "Performance Regression Detection"
            }
          ],
          "count": 2
        },
        {
          "description": "Configuration",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
              "description": "Configuration"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "Configuration"
            }
          ],
          "count": 2
        },
        {
          "description": "should return current configuration",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
              "description": "should return current configuration"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "should return current configuration"
            }
          ],
          "count": 2
        },
        {
          "description": "should update configuration",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
              "description": "should update configuration"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "should update configuration"
            }
          ],
          "count": 2
        },
        {
          "description": "Performance and Load Testing",
          "occurrences": [
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "description": "Performance and Load Testing"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "description": "Performance and Load Testing"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle complete error recovery flow",
          "occurrences": [
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "description": "should handle complete error recovery flow"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "description": "should handle complete error recovery flow"
            }
          ],
          "count": 2
        },
        {
          "description": "should maintain user roles and permissions after migration",
          "occurrences": [
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "description": "should maintain user roles and permissions after migration"
            },
            {
              "file": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
              "description": "should maintain user roles and permissions after migration"
            }
          ],
          "count": 2
        },
        {
          "description": "@",
          "occurrences": [
            {
              "file": "src\\__tests__\\comprehensive\\final-integration.test.ts",
              "description": "@"
            },
            {
              "file": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
              "description": "@"
            }
          ],
          "count": 2
        },
        {
          "description": "UI Component Integration",
          "occurrences": [
            {
              "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
              "description": "UI Component Integration"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "description": "UI Component Integration"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle client initialization failure gracefully",
          "occurrences": [
            {
              "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
              "description": "should handle client initialization failure gracefully"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "description": "should handle client initialization failure gracefully"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle sign-out flow",
          "occurrences": [
            {
              "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
              "description": "should handle sign-out flow"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "description": "should handle sign-out flow"
            }
          ],
          "count": 2
        },
        {
          "description": "should properly cleanup subscriptions on unmount",
          "occurrences": [
            {
              "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
              "description": "should properly cleanup subscriptions on unmount"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "description": "should properly cleanup subscriptions on unmount"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle HTTP errors",
          "occurrences": [
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "description": "should handle HTTP errors"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "description": "should handle HTTP errors"
            }
          ],
          "count": 2
        },
        {
          "description": "should validate reservation time constraints",
          "occurrences": [
            {
              "file": "src\\__tests__\\integration\\data-integrity-comprehensive.test.ts",
              "description": "should validate reservation time constraints"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-rls.test.ts",
              "description": "should validate reservation time constraints"
            }
          ],
          "count": 2
        },
        {
          "description": "should reject invalid UUID formats",
          "occurrences": [
            {
              "file": "src\\__tests__\\middleware\\validation.test.ts",
              "description": "should reject invalid UUID formats"
            },
            {
              "file": "src\\__tests__\\security\\user-id-guards.test.ts",
              "description": "should reject invalid UUID formats"
            }
          ],
          "count": 2
        },
        {
          "description": "should sanitize sensitive data in logs",
          "occurrences": [
            {
              "file": "src\\__tests__\\monitoring\\environment-logging-integration.test.ts",
              "description": "should sanitize sensitive data in logs"
            },
            {
              "file": "src\\__tests__\\security\\enhanced-logging.test.ts",
              "description": "should sanitize sensitive data in logs"
            }
          ],
          "count": 2
        },
        {
          "description": "Performance Metrics",
          "occurrences": [
            {
              "file": "src\\__tests__\\monitoring\\environment-monitor.test.ts",
              "description": "Performance Metrics"
            },
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "description": "Performance Metrics"
            }
          ],
          "count": 2
        },
        {
          "description": "Memory Management",
          "occurrences": [
            {
              "file": "src\\__tests__\\monitoring\\environment-monitor.test.ts",
              "description": "Memory Management"
            },
            {
              "file": "src\\__tests__\\monitoring\\security-monitor.test.ts",
              "description": "Memory Management"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "description": "Memory Management"
            }
          ],
          "count": 3
        },
        {
          "description": "should resolve alerts",
          "occurrences": [
            {
              "file": "src\\__tests__\\monitoring\\environment-monitor.test.ts",
              "description": "should resolve alerts"
            },
            {
              "file": "src\\__tests__\\monitoring\\security-monitor.test.ts",
              "description": "should resolve alerts"
            }
          ],
          "count": 2
        },
        {
          "description": "Memory Usage Performance",
          "occurrences": [
            {
              "file": "src\\__tests__\\monitoring\\environment-monitoring-performance.test.ts",
              "description": "Memory Usage Performance"
            },
            {
              "file": "src\\__tests__\\performance\\benchmark-regression.test.ts",
              "description": "Memory Usage Performance"
            }
          ],
          "count": 2
        },
        {
          "description": "should validate required parameters",
          "occurrences": [
            {
              "file": "src\\__tests__\\pagination.test.ts",
              "description": "should validate required parameters"
            },
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "description": "should validate required parameters"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle cache invalidation errors gracefully",
          "occurrences": [
            {
              "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
              "description": "should handle cache invalidation errors gracefully"
            },
            {
              "file": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
              "description": "should handle cache invalidation errors gracefully"
            }
          ],
          "count": 2
        },
        {
          "description": "should cleanup listeners on unmount",
          "occurrences": [
            {
              "file": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
              "description": "should cleanup listeners on unmount"
            },
            {
              "file": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
              "description": "should cleanup listeners on unmount"
            }
          ],
          "count": 2
        },
        {
          "description": "\\n",
          "occurrences": [
            {
              "file": "src\\__tests__\\runners\\automated-test-runner.ts",
              "description": "\\n"
            },
            {
              "file": "src\\__tests__\\runners\\comprehensive-test-runner.ts",
              "description": "\\n"
            }
          ],
          "count": 2
        },
        {
          "description": "=",
          "occurrences": [
            {
              "file": "src\\__tests__\\runners\\automated-test-runner.ts",
              "description": "="
            },
            {
              "file": "src\\__tests__\\runners\\automated-test-runner.ts",
              "description": "="
            }
          ],
          "count": 2
        },
        {
          "description": "Input Validation",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\api-security.test.ts",
              "description": "Input Validation"
            },
            {
              "file": "src\\__tests__\\security\\rpc-security.test.ts",
              "description": "Input Validation"
            }
          ],
          "count": 2
        },
        {
          "description": "Data Integrity Validation",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
              "description": "Data Integrity Validation"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "description": "Data Integrity Validation"
            }
          ],
          "count": 2
        },
        {
          "description": "Service Role Key Access",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\environment-manager.test.ts",
              "description": "Service Role Key Access"
            },
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "description": "Service Role Key Access"
            }
          ],
          "count": 2
        },
        {
          "description": "should skip reservations that do not need fixing",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\fix-reservation-integration.test.ts",
              "description": "should skip reservations that do not need fixing"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "description": "should skip reservations that do not need fixing"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle reservation not found",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\fix-reservation-integration.test.ts",
              "description": "should handle reservation not found"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "description": "should handle reservation not found"
            }
          ],
          "count": 2
        },
        {
          "description": "should handle uncorrectable user_id errors",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\fix-reservation-integration.test.ts",
              "description": "should handle uncorrectable user_id errors"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "description": "should handle uncorrectable user_id errors"
            }
          ],
          "count": 2
        },
        {
          "description": "should accept custom configuration",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\fix-reservation-integration.test.ts",
              "description": "should accept custom configuration"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "description": "should accept custom configuration"
            }
          ],
          "count": 2
        },
        {
          "description": "should successfully get public environment variable",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "description": "should successfully get public environment variable"
            },
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "description": "should successfully get public environment variable"
            }
          ],
          "count": 2
        },
        {
          "description": "should successfully get server environment variable",
          "occurrences": [
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "description": "should successfully get server environment variable"
            },
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "description": "should successfully get server environment variable"
            }
          ],
          "count": 2
        }
      ],
      "recommendations": [
        {
          "description": "Error Scenarios",
          "occurrences": [
            {
              "file": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
              "description": "Error Scenarios"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\migration-end-to-end.test.ts",
              "description": "Error Scenarios"
            },
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "description": "Error Scenarios"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "Edge Cases",
          "occurrences": [
            {
              "file": "src\\components\\ui\\__tests__\\otp-input.test.tsx",
              "description": "Edge Cases"
            },
            {
              "file": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
              "description": "Edge Cases"
            },
            {
              "file": "src\\__tests__\\pagination.test.ts",
              "description": "Edge Cases"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should categorize network errors correctly",
          "occurrences": [
            {
              "file": "src\\contexts\\__tests__\\AuthContext.test.tsx",
              "description": "should categorize network errors correctly"
            },
            {
              "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
              "description": "should categorize network errors correctly"
            },
            {
              "file": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
              "description": "should categorize network errors correctly"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "Error Handling",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\api\\pagination-support.test.ts",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\auth\\migration-script.test.ts",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\enhanced-type-system.test.ts",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\middleware.test.ts",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\pagination.test.ts",
              "description": "Error Handling"
            },
            {
              "file": "src\\__tests__\\security\\data-integrity-validation.test.ts",
              "description": "Error Handling"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should handle duplicate email error",
          "occurrences": [
            {
              "file": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
              "description": "should handle duplicate email error"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
              "description": "should handle duplicate email error"
            },
            {
              "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
              "description": "should handle duplicate email error"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should handle user not found error",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle user not found error"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle user not found error"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "description": "should handle user not found error"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should handle rate limit error",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle rate limit error"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle rate limit error"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "description": "should handle rate limit error"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should handle network errors",
          "occurrences": [
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle network errors"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
              "description": "should handle network errors"
            },
            {
              "file": "src\\hooks\\__tests__\\useAuth.test.tsx",
              "description": "should handle network errors"
            },
            {
              "file": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
              "description": "should handle network errors"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should properly cleanup all resources on unmount",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
              "description": "should properly cleanup all resources on unmount"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "description": "should properly cleanup all resources on unmount"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
              "description": "should properly cleanup all resources on unmount"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should handle cleanup errors gracefully",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
              "description": "should handle cleanup errors gracefully"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
              "description": "should handle cleanup errors gracefully"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\window-close.test.ts",
              "description": "should handle cleanup errors gracefully"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should detect missing required fields",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "description": "should detect missing required fields"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
              "description": "should detect missing required fields"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
              "description": "should detect missing required fields"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should handle null session",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
              "description": "should handle null session"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
              "description": "should handle null session"
            },
            {
              "file": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
              "description": "should handle null session"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "Error Handling Integration",
          "occurrences": [
            {
              "file": "src\\lib\\auth\\__tests__\\migration-integration.test.ts",
              "description": "Error Handling Integration"
            },
            {
              "file": "src\\__tests__\\final\\complete-auth-system.test.tsx",
              "description": "Error Handling Integration"
            },
            {
              "file": "src\\__tests__\\integration\\auth-integration.test.tsx",
              "description": "Error Handling Integration"
            },
            {
              "file": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
              "description": "Error Handling Integration"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "Convenience Functions",
          "occurrences": [
            {
              "file": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
              "description": "Convenience Functions"
            },
            {
              "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
              "description": "Convenience Functions"
            },
            {
              "file": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
              "description": "Convenience Functions"
            },
            {
              "file": "src\\__tests__\\security\\secure-environment-access.test.ts",
              "description": "Convenience Functions"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "Singleton Pattern",
          "occurrences": [
            {
              "file": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
              "description": "Singleton Pattern"
            },
            {
              "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
              "description": "Singleton Pattern"
            },
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "description": "Singleton Pattern"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "Singleton Pattern"
            },
            {
              "file": "src\\__tests__\\pwa\\deployment-integration.test.ts",
              "description": "Singleton Pattern"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should return the same instance",
          "occurrences": [
            {
              "file": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
              "description": "should return the same instance"
            },
            {
              "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
              "description": "should return the same instance"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "should return the same instance"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "renders with default props",
          "occurrences": [
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "description": "renders with default props"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "description": "renders with default props"
            },
            {
              "file": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
              "description": "renders with default props"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should handle SSR environment",
          "occurrences": [
            {
              "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
              "description": "should handle SSR environment"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
              "description": "should handle SSR environment"
            },
            {
              "file": "src\\lib\\utils\\__tests__\\error-messages.test.ts",
              "description": "should handle SSR environment"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should reject invalid email format",
          "occurrences": [
            {
              "file": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
              "description": "should reject invalid email format"
            },
            {
              "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
              "description": "should reject invalid email format"
            },
            {
              "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
              "description": "should reject invalid email format"
            },
            {
              "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
              "description": "should reject invalid email format"
            },
            {
              "file": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
              "description": "should reject invalid email format"
            },
            {
              "file": "src\\__tests__\\middleware\\validation.test.ts",
              "description": "should reject invalid email format"
            },
            {
              "file": "src\\__tests__\\middleware\\validation.test.ts",
              "description": "should reject invalid email format"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should handle empty results",
          "occurrences": [
            {
              "file": "src\\__tests__\\api\\pagination-functionality.test.ts",
              "description": "should handle empty results"
            },
            {
              "file": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
              "description": "should handle empty results"
            },
            {
              "file": "src\\__tests__\\pagination.test.ts",
              "description": "should handle empty results"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "should cleanup resources on destroy",
          "occurrences": [
            {
              "file": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
              "description": "should cleanup resources on destroy"
            },
            {
              "file": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
              "description": "should cleanup resources on destroy"
            },
            {
              "file": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
              "description": "should cleanup resources on destroy"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        },
        {
          "description": "Memory Management",
          "occurrences": [
            {
              "file": "src\\__tests__\\monitoring\\environment-monitor.test.ts",
              "description": "Memory Management"
            },
            {
              "file": "src\\__tests__\\monitoring\\security-monitor.test.ts",
              "description": "Memory Management"
            },
            {
              "file": "src\\__tests__\\validation\\performance-validation.test.tsx",
              "description": "Memory Management"
            }
          ],
          "recommendation": "중복된 테스트 케이스 통합 또는 차별화 필요"
        }
      ]
    },
    "statistics": {
      "totalTestFiles": 120,
      "duplicateUtilities": 75,
      "duplicateTests": 128,
      "structureIssues": 1
    }
  },
  "testFiles": [
    {
      "name": "page.test.tsx",
      "relativePath": "src\\app\\auth\\callback\\__tests__\\page.test.tsx",
      "size": 9042,
      "lastModified": "2025-07-29T11:40:00.189Z"
    },
    {
      "name": "enhanced-loading-state.test.tsx",
      "relativePath": "src\\components\\ui\\__tests__\\enhanced-loading-state.test.tsx",
      "size": 4219,
      "lastModified": "2025-07-21T14:52:05.798Z"
    },
    {
      "name": "otp-input.test.tsx",
      "relativePath": "src\\components\\ui\\__tests__\\otp-input.test.tsx",
      "size": 15389,
      "lastModified": "2025-07-28T13:01:03.950Z"
    },
    {
      "name": "AuthContext.test.tsx",
      "relativePath": "src\\contexts\\__tests__\\AuthContext.test.tsx",
      "size": 12199,
      "lastModified": "2025-07-29T04:23:14.750Z"
    },
    {
      "name": "SupabaseProvider.test.tsx",
      "relativePath": "src\\contexts\\__tests__\\SupabaseProvider.test.tsx",
      "size": 7691,
      "lastModified": "2025-07-29T11:40:00.194Z"
    },
    {
      "name": "LoginForm-basic.test.tsx",
      "relativePath": "src\\features\\auth\\components\\__tests__\\LoginForm-basic.test.tsx",
      "size": 7769,
      "lastModified": "2025-07-28T13:32:29.960Z"
    },
    {
      "name": "LoginForm-integration.test.tsx",
      "relativePath": "src\\features\\auth\\components\\__tests__\\LoginForm-integration.test.tsx",
      "size": 15765,
      "lastModified": "2025-07-29T11:40:00.197Z"
    },
    {
      "name": "SignupForm-otp-compatibility.test.tsx",
      "relativePath": "src\\features\\auth\\components\\__tests__\\SignupForm-otp-compatibility.test.tsx",
      "size": 17203,
      "lastModified": "2025-07-29T11:40:00.199Z"
    },
    {
      "name": "SignupForm-simple.test.tsx",
      "relativePath": "src\\features\\auth\\components\\__tests__\\SignupForm-simple.test.tsx",
      "size": 3395,
      "lastModified": "2025-07-28T14:14:44.610Z"
    },
    {
      "name": "SignupForm.basic.test.tsx",
      "relativePath": "src\\features\\auth\\components\\__tests__\\SignupForm.basic.test.tsx",
      "size": 4968,
      "lastModified": "2025-07-23T08:16:19.948Z"
    },
    {
      "name": "SignupForm.test.tsx",
      "relativePath": "src\\features\\auth\\components\\__tests__\\SignupForm.test.tsx",
      "size": 24327,
      "lastModified": "2025-07-29T11:40:00.201Z"
    },
    {
      "name": "SIGNUP_OTP_COMPATIBILITY_SUMMARY.md",
      "relativePath": "src\\features\\auth\\components\\__tests__\\SIGNUP_OTP_COMPATIBILITY_SUMMARY.md",
      "size": 7775,
      "lastModified": "2025-07-28T14:17:48.119Z"
    },
    {
      "name": "useAuth-integration.test.ts",
      "relativePath": "src\\hooks\\__tests__\\useAuth-integration.test.ts",
      "size": 13922,
      "lastModified": "2025-07-29T11:40:00.210Z"
    },
    {
      "name": "useAuth-migration.test.ts",
      "relativePath": "src\\hooks\\__tests__\\useAuth-migration.test.ts",
      "size": 11525,
      "lastModified": "2025-07-29T11:40:00.211Z"
    },
    {
      "name": "useAuth-otp.test.ts",
      "relativePath": "src\\hooks\\__tests__\\useAuth-otp.test.ts",
      "size": 16397,
      "lastModified": "2025-07-28T13:13:26.022Z"
    },
    {
      "name": "useAuth.test.tsx",
      "relativePath": "src\\hooks\\__tests__\\useAuth.test.tsx",
      "size": 14711,
      "lastModified": "2025-07-29T11:40:00.212Z"
    },
    {
      "name": "useEnhancedLoadingState.test.ts",
      "relativePath": "src\\hooks\\__tests__\\useEnhancedLoadingState.test.ts",
      "size": 3189,
      "lastModified": "2025-07-21T15:07:24.118Z"
    },
    {
      "name": "useNavigationController.test.ts",
      "relativePath": "src\\hooks\\__tests__\\useNavigationController.test.ts",
      "size": 7837,
      "lastModified": "2025-07-21T14:03:04.814Z"
    },
    {
      "name": "AuthProvider.comprehensive.test.tsx",
      "relativePath": "src\\lib\\auth\\__tests__\\AuthProvider.comprehensive.test.tsx",
      "size": 32648,
      "lastModified": "2025-07-29T07:37:30.030Z"
    },
    {
      "name": "AuthProvider.e2e.test.tsx",
      "relativePath": "src\\lib\\auth\\__tests__\\AuthProvider.e2e.test.tsx",
      "size": 18784,
      "lastModified": "2025-07-29T07:40:56.627Z"
    },
    {
      "name": "AuthProvider.infiniteLoop.test.tsx",
      "relativePath": "src\\lib\\auth\\__tests__\\AuthProvider.infiniteLoop.test.tsx",
      "size": 11850,
      "lastModified": "2025-07-29T08:18:04.263Z"
    },
    {
      "name": "AuthProvider.integration.test.tsx",
      "relativePath": "src\\lib\\auth\\__tests__\\AuthProvider.integration.test.tsx",
      "size": 32166,
      "lastModified": "2025-07-29T07:31:32.086Z"
    },
    {
      "name": "AuthProvider.performance.test.tsx",
      "relativePath": "src\\lib\\auth\\__tests__\\AuthProvider.performance.test.tsx",
      "size": 20798,
      "lastModified": "2025-07-29T07:32:07.828Z"
    },
    {
      "name": "migration-compatibility.test.ts",
      "relativePath": "src\\lib\\auth\\__tests__\\migration-compatibility.test.ts",
      "size": 11865,
      "lastModified": "2025-07-28T13:44:27.541Z"
    },
    {
      "name": "migration-end-to-end.test.ts",
      "relativePath": "src\\lib\\auth\\__tests__\\migration-end-to-end.test.ts",
      "size": 12197,
      "lastModified": "2025-07-28T13:49:57.878Z"
    },
    {
      "name": "migration-integration.test.ts",
      "relativePath": "src\\lib\\auth\\__tests__\\migration-integration.test.ts",
      "size": 13549,
      "lastModified": "2025-07-28T13:47:08.700Z"
    },
    {
      "name": "session-compatibility.test.ts",
      "relativePath": "src\\lib\\auth\\__tests__\\session-compatibility.test.ts",
      "size": 14575,
      "lastModified": "2025-07-28T13:44:43.240Z"
    },
    {
      "name": "SessionErrorHandler.test.ts",
      "relativePath": "src\\lib\\auth\\__tests__\\SessionErrorHandler.test.ts",
      "size": 10864,
      "lastModified": "2025-07-29T06:31:47.855Z"
    },
    {
      "name": "SessionPollingManager.test.ts",
      "relativePath": "src\\lib\\auth\\__tests__\\SessionPollingManager.test.ts",
      "size": 9485,
      "lastModified": "2025-07-29T06:33:19.370Z"
    },
    {
      "name": "environment-validator.test.ts",
      "relativePath": "src\\lib\\config\\__tests__\\environment-validator.test.ts",
      "size": 17024,
      "lastModified": "2025-07-29T11:40:00.219Z"
    },
    {
      "name": "email-validation-basic.test.ts",
      "relativePath": "src\\lib\\email-validation\\__tests__\\email-validation-basic.test.ts",
      "size": 618,
      "lastModified": "2025-07-23T07:36:36.202Z"
    },
    {
      "name": "email-validation-integration.test.ts",
      "relativePath": "src\\lib\\email-validation\\__tests__\\email-validation-integration.test.ts",
      "size": 6302,
      "lastModified": "2025-07-23T07:46:48.435Z"
    },
    {
      "name": "environment-error-handler.test.ts",
      "relativePath": "src\\lib\\error-handling\\__tests__\\environment-error-handler.test.ts",
      "size": 15237,
      "lastModified": "2025-07-23T07:26:55.066Z"
    },
    {
      "name": "NavigationController.test.ts",
      "relativePath": "src\\lib\\navigation\\__tests__\\NavigationController.test.ts",
      "size": 7547,
      "lastModified": "2025-07-29T11:40:00.224Z"
    },
    {
      "name": "config.test.ts",
      "relativePath": "src\\lib\\routes\\__tests__\\config.test.ts",
      "size": 8969,
      "lastModified": "2025-07-29T11:40:00.227Z"
    },
    {
      "name": "e2e-scenarios.test.ts",
      "relativePath": "src\\lib\\routes\\__tests__\\e2e-scenarios.test.ts",
      "size": 18303,
      "lastModified": "2025-07-29T11:40:00.227Z"
    },
    {
      "name": "integration.test.ts",
      "relativePath": "src\\lib\\routes\\__tests__\\integration.test.ts",
      "size": 14143,
      "lastModified": "2025-07-29T11:40:00.228Z"
    },
    {
      "name": "matcher.test.ts",
      "relativePath": "src\\lib\\routes\\__tests__\\matcher.test.ts",
      "size": 15886,
      "lastModified": "2025-07-29T11:40:00.229Z"
    },
    {
      "name": "performance.test.ts",
      "relativePath": "src\\lib\\routes\\__tests__\\performance.test.ts",
      "size": 10499,
      "lastModified": "2025-07-29T11:40:00.230Z"
    },
    {
      "name": "README.md",
      "relativePath": "src\\lib\\routes\\__tests__\\README.md",
      "size": 8689,
      "lastModified": "2025-07-21T12:34:59.943Z"
    },
    {
      "name": "user-feedback.test.ts",
      "relativePath": "src\\lib\\routes\\__tests__\\user-feedback.test.ts",
      "size": 12814,
      "lastModified": "2025-07-21T12:34:59.947Z"
    },
    {
      "name": "environment-startup-validator.test.ts",
      "relativePath": "src\\lib\\startup\\__tests__\\environment-startup-validator.test.ts",
      "size": 11935,
      "lastModified": "2025-07-29T11:40:00.236Z"
    },
    {
      "name": "client-basic.test.ts",
      "relativePath": "src\\lib\\supabase\\__tests__\\client-basic.test.ts",
      "size": 7445,
      "lastModified": "2025-07-29T11:40:00.237Z"
    },
    {
      "name": "client-integration.test.ts",
      "relativePath": "src\\lib\\supabase\\__tests__\\client-integration.test.ts",
      "size": 4815,
      "lastModified": "2025-07-23T07:01:41.278Z"
    },
    {
      "name": "client-validation.js",
      "relativePath": "src\\lib\\supabase\\__tests__\\client-validation.js",
      "size": 4381,
      "lastModified": "2025-07-23T07:02:48.765Z"
    },
    {
      "name": "client.test.ts",
      "relativePath": "src\\lib\\supabase\\__tests__\\client.test.ts",
      "size": 14949,
      "lastModified": "2025-07-29T11:40:00.237Z"
    },
    {
      "name": "auth-navigation.test.ts",
      "relativePath": "src\\lib\\utils\\__tests__\\auth-navigation.test.ts",
      "size": 11627,
      "lastModified": "2025-07-21T12:34:59.954Z"
    },
    {
      "name": "error-messages.test.ts",
      "relativePath": "src\\lib\\utils\\__tests__\\error-messages.test.ts",
      "size": 9496,
      "lastModified": "2025-07-21T12:34:59.954Z"
    },
    {
      "name": "pwa-signup-utils.test.ts",
      "relativePath": "src\\lib\\utils\\__tests__\\pwa-signup-utils.test.ts",
      "size": 13303,
      "lastModified": "2025-07-28T14:02:10.560Z"
    },
    {
      "name": "window-close.test.ts",
      "relativePath": "src\\lib\\utils\\__tests__\\window-close.test.ts",
      "size": 14884,
      "lastModified": "2025-07-21T12:34:59.955Z"
    },
    {
      "name": "signup-otp-schemas.test.ts",
      "relativePath": "src\\lib\\validations\\__tests__\\signup-otp-schemas.test.ts",
      "size": 11639,
      "lastModified": "2025-07-28T14:02:50.453Z"
    },
    {
      "name": "otp-accessibility.test.ts",
      "relativePath": "src\\__tests__\\accessibility\\otp-accessibility.test.ts",
      "size": 24541,
      "lastModified": "2025-07-28T14:47:29.094Z"
    },
    {
      "name": "deployment-info.test.ts",
      "relativePath": "src\\__tests__\\api\\deployment-info.test.ts",
      "size": 11516,
      "lastModified": "2025-07-22T04:42:02.992Z"
    },
    {
      "name": "pagination-functionality.test.ts",
      "relativePath": "src\\__tests__\\api\\pagination-functionality.test.ts",
      "size": 11834,
      "lastModified": "2025-07-22T04:53:27.503Z"
    },
    {
      "name": "pagination-support.test.ts",
      "relativePath": "src\\__tests__\\api\\pagination-support.test.ts",
      "size": 8512,
      "lastModified": "2025-07-22T05:21:28.593Z"
    },
    {
      "name": "public-endpoints.test.ts",
      "relativePath": "src\\__tests__\\api\\reservations\\public-endpoints.test.ts",
      "size": 13355,
      "lastModified": "2025-07-21T23:58:21.920Z"
    },
    {
      "name": "standardized-validation.test.ts",
      "relativePath": "src\\__tests__\\api\\standardized-validation.test.ts",
      "size": 22798,
      "lastModified": "2025-07-22T23:08:30.896Z"
    },
    {
      "name": "auth-health-monitor.test.ts",
      "relativePath": "src\\__tests__\\auth\\auth-health-monitor.test.ts",
      "size": 15314,
      "lastModified": "2025-07-25T12:08:14.411Z"
    },
    {
      "name": "auth-integration.test.ts",
      "relativePath": "src\\__tests__\\auth\\auth-integration.test.ts",
      "size": 13560,
      "lastModified": "2025-07-25T12:00:00.588Z"
    },
    {
      "name": "cross-browser-compatibility.test.ts",
      "relativePath": "src\\__tests__\\auth\\cross-browser-compatibility.test.ts",
      "size": 20872,
      "lastModified": "2025-07-25T12:04:57.102Z"
    },
    {
      "name": "migration-script.test.ts",
      "relativePath": "src\\__tests__\\auth\\migration-script.test.ts",
      "size": 16294,
      "lastModified": "2025-07-25T11:45:54.626Z"
    },
    {
      "name": "optimized-auth-system.test.ts",
      "relativePath": "src\\__tests__\\auth\\optimized-auth-system.test.ts",
      "size": 10840,
      "lastModified": "2025-07-25T11:35:02.250Z"
    },
    {
      "name": "performance-validation.test.ts",
      "relativePath": "src\\__tests__\\auth\\performance-validation.test.ts",
      "size": 13269,
      "lastModified": "2025-07-25T12:02:20.160Z"
    },
    {
      "name": "security-validation.test.ts",
      "relativePath": "src\\__tests__\\auth\\security-validation.test.ts",
      "size": 17612,
      "lastModified": "2025-07-25T12:03:34.993Z"
    },
    {
      "name": "simplified-redirection-handler.test.ts",
      "relativePath": "src\\__tests__\\auth\\simplified-redirection-handler.test.ts",
      "size": 10473,
      "lastModified": "2025-07-25T11:34:26.976Z"
    },
    {
      "name": "SmartVerifiedPage.test.tsx",
      "relativePath": "src\\__tests__\\auth\\SmartVerifiedPage.test.tsx",
      "size": 11141,
      "lastModified": "2025-07-25T11:44:48.145Z"
    },
    {
      "name": "universal-auth-state-manager.test.ts",
      "relativePath": "src\\__tests__\\auth\\universal-auth-state-manager.test.ts",
      "size": 10139,
      "lastModified": "2025-07-25T11:37:50.047Z"
    },
    {
      "name": "validation-summary.md",
      "relativePath": "src\\__tests__\\auth\\validation-summary.md",
      "size": 7227,
      "lastModified": "2025-07-25T12:10:05.574Z"
    },
    {
      "name": "InfiniteReservationList.test.tsx",
      "relativePath": "src\\__tests__\\components\\InfiniteReservationList.test.tsx",
      "size": 13870,
      "lastModified": "2025-07-22T04:59:28.423Z"
    },
    {
      "name": "final-integration.test.ts",
      "relativePath": "src\\__tests__\\comprehensive\\final-integration.test.ts",
      "size": 27507,
      "lastModified": "2025-07-28T14:38:06.806Z"
    },
    {
      "name": "COMPREHENSIVE_TEST_SUITE_SUMMARY.md",
      "relativePath": "src\\__tests__\\COMPREHENSIVE_TEST_SUITE_SUMMARY.md",
      "size": 12102,
      "lastModified": "2025-07-28T14:48:33.837Z"
    },
    {
      "name": "pagination-rpc-functions.test.ts",
      "relativePath": "src\\__tests__\\database\\pagination-rpc-functions.test.ts",
      "size": 11610,
      "lastModified": "2025-07-22T04:49:48.999Z"
    },
    {
      "name": "deployment-config-scenarios.test.ts",
      "relativePath": "src\\__tests__\\deployment\\deployment-config-scenarios.test.ts",
      "size": 21611,
      "lastModified": "2025-07-23T10:11:32.964Z"
    },
    {
      "name": "platform-integration.test.ts",
      "relativePath": "src\\__tests__\\deployment\\platform-integration.test.ts",
      "size": 16099,
      "lastModified": "2025-07-23T10:07:58.637Z"
    },
    {
      "name": "otp-authentication-flow.test.ts",
      "relativePath": "src\\__tests__\\e2e\\otp-authentication-flow.test.ts",
      "size": 22609,
      "lastModified": "2025-07-28T14:20:55.582Z"
    },
    {
      "name": "enhanced-type-system.test.ts",
      "relativePath": "src\\__tests__\\enhanced-type-system.test.ts",
      "size": 17752,
      "lastModified": "2025-07-22T12:01:36.960Z"
    },
    {
      "name": "otp-error-handling.test.ts",
      "relativePath": "src\\__tests__\\error-scenarios\\otp-error-handling.test.ts",
      "size": 23729,
      "lastModified": "2025-07-28T14:49:04.982Z"
    },
    {
      "name": "complete-auth-system.test.tsx",
      "relativePath": "src\\__tests__\\final\\complete-auth-system.test.tsx",
      "size": 19449,
      "lastModified": "2025-07-29T04:46:13.231Z"
    },
    {
      "name": "infinite-reservations-functionality.test.ts",
      "relativePath": "src\\__tests__\\hooks\\infinite-reservations-functionality.test.ts",
      "size": 11949,
      "lastModified": "2025-07-22T05:05:35.653Z"
    },
    {
      "name": "infinite-scrolling-performance.test.ts",
      "relativePath": "src\\__tests__\\hooks\\infinite-scrolling-performance.test.ts",
      "size": 5884,
      "lastModified": "2025-07-22T05:19:42.710Z"
    },
    {
      "name": "useInfinitePublicReservations.test.ts",
      "relativePath": "src\\__tests__\\hooks\\useInfinitePublicReservations.test.ts",
      "size": 12525,
      "lastModified": "2025-07-22T05:15:53.177Z"
    },
    {
      "name": "auth-integration.test.tsx",
      "relativePath": "src\\__tests__\\integration\\auth-integration.test.tsx",
      "size": 13794,
      "lastModified": "2025-07-29T04:35:16.315Z"
    },
    {
      "name": "data-integrity-comprehensive.test.ts",
      "relativePath": "src\\__tests__\\integration\\data-integrity-comprehensive.test.ts",
      "size": 20253,
      "lastModified": "2025-07-22T23:04:33.877Z"
    },
    {
      "name": "security-performance-monitoring.test.ts",
      "relativePath": "src\\__tests__\\integration\\security-performance-monitoring.test.ts",
      "size": 27562,
      "lastModified": "2025-07-22T23:06:42.521Z"
    },
    {
      "name": "signup-otp-integration.test.ts",
      "relativePath": "src\\__tests__\\integration\\signup-otp-integration.test.ts",
      "size": 14257,
      "lastModified": "2025-07-28T14:08:19.594Z"
    },
    {
      "name": "test-infrastructure-integration.test.ts",
      "relativePath": "src\\__tests__\\integration\\test-infrastructure-integration.test.ts",
      "size": 15064,
      "lastModified": "2025-07-22T23:17:55.738Z"
    },
    {
      "name": "validation.test.ts",
      "relativePath": "src\\__tests__\\middleware\\validation.test.ts",
      "size": 9054,
      "lastModified": "2025-07-22T13:04:50.935Z"
    },
    {
      "name": "middleware.test.ts",
      "relativePath": "src\\__tests__\\middleware.test.ts",
      "size": 11750,
      "lastModified": "2025-07-21T12:34:59.902Z"
    },
    {
      "name": "comprehensive-monitoring-integration.test.ts",
      "relativePath": "src\\__tests__\\monitoring\\comprehensive-monitoring-integration.test.ts",
      "size": 18956,
      "lastModified": "2025-07-23T09:44:39.541Z"
    },
    {
      "name": "environment-logging-integration.test.ts",
      "relativePath": "src\\__tests__\\monitoring\\environment-logging-integration.test.ts",
      "size": 16501,
      "lastModified": "2025-07-23T09:39:52.061Z"
    },
    {
      "name": "environment-monitor.test.ts",
      "relativePath": "src\\__tests__\\monitoring\\environment-monitor.test.ts",
      "size": 23979,
      "lastModified": "2025-07-23T09:33:58.191Z"
    },
    {
      "name": "environment-monitoring-performance.test.ts",
      "relativePath": "src\\__tests__\\monitoring\\environment-monitoring-performance.test.ts",
      "size": 17531,
      "lastModified": "2025-07-23T09:46:43.924Z"
    },
    {
      "name": "security-monitor.test.ts",
      "relativePath": "src\\__tests__\\monitoring\\security-monitor.test.ts",
      "size": 10940,
      "lastModified": "2025-07-22T06:03:50.847Z"
    },
    {
      "name": "pagination.test.ts",
      "relativePath": "src\\__tests__\\pagination.test.ts",
      "size": 12617,
      "lastModified": "2025-07-23T06:35:39.417Z"
    },
    {
      "name": "benchmark-regression.test.ts",
      "relativePath": "src\\__tests__\\performance\\benchmark-regression.test.ts",
      "size": 30321,
      "lastModified": "2025-07-22T23:10:56.876Z"
    },
    {
      "name": "ClientPolyfillManager.test.tsx",
      "relativePath": "src\\__tests__\\polyfills\\ClientPolyfillManager.test.tsx",
      "size": 8284,
      "lastModified": "2025-07-22T02:34:28.838Z"
    },
    {
      "name": "deployment-integration.test.ts",
      "relativePath": "src\\__tests__\\pwa\\deployment-integration.test.ts",
      "size": 11681,
      "lastModified": "2025-07-22T04:38:35.022Z"
    },
    {
      "name": "DeploymentUpdateNotification.test.tsx",
      "relativePath": "src\\__tests__\\pwa\\DeploymentUpdateNotification.test.tsx",
      "size": 10861,
      "lastModified": "2025-07-22T04:39:26.352Z"
    },
    {
      "name": "otp-pwa-integration.test.ts",
      "relativePath": "src\\__tests__\\pwa\\otp-pwa-integration.test.ts",
      "size": 23570,
      "lastModified": "2025-07-28T14:22:49.067Z"
    },
    {
      "name": "reservation-edit-cancel.test.ts",
      "relativePath": "src\\__tests__\\reservation-edit-cancel.test.ts",
      "size": 10098,
      "lastModified": "2025-07-21T12:34:59.902Z"
    },
    {
      "name": "automated-test-runner.ts",
      "relativePath": "src\\__tests__\\runners\\automated-test-runner.ts",
      "size": 16990,
      "lastModified": "2025-07-22T23:13:29.949Z"
    },
    {
      "name": "comprehensive-test-runner.ts",
      "relativePath": "src\\__tests__\\runners\\comprehensive-test-runner.ts",
      "size": 13371,
      "lastModified": "2025-07-28T14:39:09.121Z"
    },
    {
      "name": "api-security.test.ts",
      "relativePath": "src\\__tests__\\security\\api-security.test.ts",
      "size": 20474,
      "lastModified": "2025-07-22T05:41:19.185Z"
    },
    {
      "name": "authentication-authorization.test.ts",
      "relativePath": "src\\__tests__\\security\\authentication-authorization.test.ts",
      "size": 16049,
      "lastModified": "2025-07-22T05:38:18.431Z"
    },
    {
      "name": "data-integrity-rls.test.ts",
      "relativePath": "src\\__tests__\\security\\data-integrity-rls.test.ts",
      "size": 18248,
      "lastModified": "2025-07-22T05:43:19.556Z"
    },
    {
      "name": "data-integrity-validation.test.ts",
      "relativePath": "src\\__tests__\\security\\data-integrity-validation.test.ts",
      "size": 13084,
      "lastModified": "2025-07-22T00:47:59.490Z"
    },
    {
      "name": "enhanced-logging.test.ts",
      "relativePath": "src\\__tests__\\security\\enhanced-logging.test.ts",
      "size": 6650,
      "lastModified": "2025-07-22T02:03:31.770Z"
    },
    {
      "name": "environment-config.test.ts",
      "relativePath": "src\\__tests__\\security\\environment-config.test.ts",
      "size": 10188,
      "lastModified": "2025-07-22T02:12:19.847Z"
    },
    {
      "name": "environment-manager.test.ts",
      "relativePath": "src\\__tests__\\security\\environment-manager.test.ts",
      "size": 12499,
      "lastModified": "2025-07-22T02:09:45.855Z"
    },
    {
      "name": "fix-reservation-integration.test.ts",
      "relativePath": "src\\__tests__\\security\\fix-reservation-integration.test.ts",
      "size": 10549,
      "lastModified": "2025-07-22T01:06:54.271Z"
    },
    {
      "name": "fix-reservation-user-id.test.ts",
      "relativePath": "src\\__tests__\\security\\fix-reservation-user-id.test.ts",
      "size": 18744,
      "lastModified": "2025-07-22T01:05:23.246Z"
    },
    {
      "name": "rpc-security.test.ts",
      "relativePath": "src\\__tests__\\security\\rpc-security.test.ts",
      "size": 10545,
      "lastModified": "2025-07-22T00:36:33.326Z"
    },
    {
      "name": "secure-environment-access.test.ts",
      "relativePath": "src\\__tests__\\security\\secure-environment-access.test.ts",
      "size": 16957,
      "lastModified": "2025-07-23T13:44:32.392Z"
    },
    {
      "name": "third-party-dependencies.test.ts",
      "relativePath": "src\\__tests__\\security\\third-party-dependencies.test.ts",
      "size": 10561,
      "lastModified": "2025-07-22T01:47:31.962Z"
    },
    {
      "name": "user-id-guards.test.ts",
      "relativePath": "src\\__tests__\\security\\user-id-guards.test.ts",
      "size": 4363,
      "lastModified": "2025-07-22T01:00:03.766Z"
    },
    {
      "name": "test-infrastructure.setup.ts",
      "relativePath": "src\\__tests__\\setup\\test-infrastructure.setup.ts",
      "size": 10910,
      "lastModified": "2025-07-22T23:17:11.107Z"
    },
    {
      "name": "usePaginatedReservations.test.ts",
      "relativePath": "src\\__tests__\\usePaginatedReservations.test.ts",
      "size": 5292,
      "lastModified": "2025-07-23T02:45:50.516Z"
    },
    {
      "name": "performance-validation.test.tsx",
      "relativePath": "src\\__tests__\\validation\\performance-validation.test.tsx",
      "size": 12372,
      "lastModified": "2025-07-29T04:37:10.878Z"
    },
    {
      "name": "system-readiness-check.ts",
      "relativePath": "src\\__tests__\\validation\\system-readiness-check.ts",
      "size": 13367,
      "lastModified": "2025-07-28T14:40:26.230Z"
    },
    {
      "name": "typescript-validation.test.ts",
      "relativePath": "src\\__tests__\\validation\\typescript-validation.test.ts",
      "size": 10896,
      "lastModified": "2025-07-29T04:36:06.040Z"
    }
  ]
}